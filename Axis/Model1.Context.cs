//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Axis
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AxisEntities : DbContext
    {
        public AxisEntities()
            : base("name=AxisEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual int spAddNewNote(Nullable<int> login_ID, string newNote)
        {
            var login_IDParameter = login_ID.HasValue ?
                new ObjectParameter("Login_ID", login_ID) :
                new ObjectParameter("Login_ID", typeof(int));
    
            var newNoteParameter = newNote != null ?
                new ObjectParameter("NewNote", newNote) :
                new ObjectParameter("NewNote", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAddNewNote", login_IDParameter, newNoteParameter);
        }
    
        public virtual ObjectResult<spFollowEvent_Result> spFollowEvent(Nullable<int> login_ID, Nullable<int> event_ID, string type)
        {
            var login_IDParameter = login_ID.HasValue ?
                new ObjectParameter("Login_ID", login_ID) :
                new ObjectParameter("Login_ID", typeof(int));
    
            var event_IDParameter = event_ID.HasValue ?
                new ObjectParameter("Event_ID", event_ID) :
                new ObjectParameter("Event_ID", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFollowEvent_Result>("spFollowEvent", login_IDParameter, event_IDParameter, typeParameter);
        }
    
        public virtual ObjectResult<spGet_714Shares_Result> spGet_714Shares(Nullable<int> listing_ID)
        {
            var listing_IDParameter = listing_ID.HasValue ?
                new ObjectParameter("Listing_ID", listing_ID) :
                new ObjectParameter("Listing_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_714Shares_Result>("spGet_714Shares", listing_IDParameter);
        }
    
        public virtual ObjectResult<spGet_999List_Result> spGet_999List()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_999List_Result>("spGet_999List");
        }
    
        public virtual ObjectResult<spGet_Activity_Result> spGet_Activity(Nullable<int> event_ID)
        {
            var event_IDParameter = event_ID.HasValue ?
                new ObjectParameter("Event_ID", event_ID) :
                new ObjectParameter("Event_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_Activity_Result>("spGet_Activity", event_IDParameter);
        }
    
        public virtual ObjectResult<spGet_AdvancedSearch_Result> spGet_AdvancedSearch(Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<int> catID, Nullable<int> headlinerID, Nullable<int> optionID)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var headlinerIDParameter = headlinerID.HasValue ?
                new ObjectParameter("HeadlinerID", headlinerID) :
                new ObjectParameter("HeadlinerID", typeof(int));
    
            var optionIDParameter = optionID.HasValue ?
                new ObjectParameter("OptionID", optionID) :
                new ObjectParameter("OptionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_AdvancedSearch_Result>("spGet_AdvancedSearch", fromParameter, toParameter, catIDParameter, headlinerIDParameter, optionIDParameter);
        }
    
        public virtual ObjectResult<spGet_AssignedList_Result> spGet_AssignedList(Nullable<int> event_ID)
        {
            var event_IDParameter = event_ID.HasValue ?
                new ObjectParameter("Event_ID", event_ID) :
                new ObjectParameter("Event_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_AssignedList_Result>("spGet_AssignedList", event_IDParameter);
        }
    
        public virtual ObjectResult<spGet_AssignedOptions_Result> spGet_AssignedOptions()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_AssignedOptions_Result>("spGet_AssignedOptions");
        }
    
        public virtual ObjectResult<spGet_Categories_Result> spGet_Categories()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_Categories_Result>("spGet_Categories");
        }
    
        public virtual ObjectResult<spGet_EventInfo_Result> spGet_EventInfo(Nullable<int> event_ID)
        {
            var event_IDParameter = event_ID.HasValue ?
                new ObjectParameter("Event_ID", event_ID) :
                new ObjectParameter("Event_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_EventInfo_Result>("spGet_EventInfo", event_IDParameter);
        }
    
        public virtual ObjectResult<spGet_EventsImFollowing_Result> spGet_EventsImFollowing(Nullable<int> login_ID)
        {
            var login_IDParameter = login_ID.HasValue ?
                new ObjectParameter("Login_ID", login_ID) :
                new ObjectParameter("Login_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_EventsImFollowing_Result>("spGet_EventsImFollowing", login_IDParameter);
        }
    
        public virtual ObjectResult<spGet_ExecptionTotals_Result> spGet_ExecptionTotals()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_ExecptionTotals_Result>("spGet_ExecptionTotals");
        }
    
        public virtual ObjectResult<spGet_HeadlinersList_Result> spGet_HeadlinersList(Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<int> cat_ID)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            var cat_IDParameter = cat_ID.HasValue ?
                new ObjectParameter("Cat_ID", cat_ID) :
                new ObjectParameter("Cat_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_HeadlinersList_Result>("spGet_HeadlinersList", fromParameter, toParameter, cat_IDParameter);
        }
    
        public virtual ObjectResult<spGet_Invoices_Result> spGet_Invoices(Nullable<int> login_ID)
        {
            var login_IDParameter = login_ID.HasValue ?
                new ObjectParameter("Login_ID", login_ID) :
                new ObjectParameter("Login_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_Invoices_Result>("spGet_Invoices", login_IDParameter);
        }
    
        public virtual ObjectResult<spGet_Listing_ID_Result> spGet_Listing_ID(Nullable<int> listingId)
        {
            var listingIdParameter = listingId.HasValue ?
                new ObjectParameter("listingId", listingId) :
                new ObjectParameter("listingId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_Listing_ID_Result>("spGet_Listing_ID", listingIdParameter);
        }
    
        public virtual ObjectResult<spGet_MyEvents_Result> spGet_MyEvents(Nullable<int> login_ID)
        {
            var login_IDParameter = login_ID.HasValue ?
                new ObjectParameter("Login_ID", login_ID) :
                new ObjectParameter("Login_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_MyEvents_Result>("spGet_MyEvents", login_IDParameter);
        }
    
        public virtual ObjectResult<spGet_Notes_Result> spGet_Notes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_Notes_Result>("spGet_Notes");
        }
    
        public virtual ObjectResult<spGet_PeopleAssigned_Result> spGet_PeopleAssigned()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_PeopleAssigned_Result>("spGet_PeopleAssigned");
        }
    
        public virtual ObjectResult<spGet_PeopleSales_Result> spGet_PeopleSales()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_PeopleSales_Result>("spGet_PeopleSales");
        }
    
        public virtual ObjectResult<spGet_PresalesForEvent_Result> spGet_PresalesForEvent(Nullable<int> event_ID)
        {
            var event_IDParameter = event_ID.HasValue ?
                new ObjectParameter("Event_ID", event_ID) :
                new ObjectParameter("Event_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_PresalesForEvent_Result>("spGet_PresalesForEvent", event_IDParameter);
        }
    
        public virtual ObjectResult<spGet_Search_Result> spGet_Search(string input)
        {
            var inputParameter = input != null ?
                new ObjectParameter("Input", input) :
                new ObjectParameter("Input", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_Search_Result>("spGet_Search", inputParameter);
        }
    
        public virtual ObjectResult<spGet_SHCredintials_Result> spGet_SHCredintials()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_SHCredintials_Result>("spGet_SHCredintials");
        }
    
        public virtual ObjectResult<spGet_UnpricedList_Result> spGet_UnpricedList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_UnpricedList_Result>("spGet_UnpricedList");
        }
    
        public virtual ObjectResult<spGet_UnsharedList_Result> spGet_UnsharedList(Nullable<int> cat_ID)
        {
            var cat_IDParameter = cat_ID.HasValue ?
                new ObjectParameter("Cat_ID", cat_ID) :
                new ObjectParameter("Cat_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_UnsharedList_Result>("spGet_UnsharedList", cat_IDParameter);
        }
    
        public virtual int spUpdate_714(string type, Nullable<int> listing_ID, Nullable<int> login_ID)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var listing_IDParameter = listing_ID.HasValue ?
                new ObjectParameter("Listing_ID", listing_ID) :
                new ObjectParameter("Listing_ID", typeof(int));
    
            var login_IDParameter = login_ID.HasValue ?
                new ObjectParameter("Login_ID", login_ID) :
                new ObjectParameter("Login_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdate_714", typeParameter, listing_IDParameter, login_IDParameter);
        }
    
        public virtual int spUpdate_AllShares(string type, Nullable<int> listing_ID, Nullable<int> login_ID)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var listing_IDParameter = listing_ID.HasValue ?
                new ObjectParameter("Listing_ID", listing_ID) :
                new ObjectParameter("Listing_ID", typeof(int));
    
            var login_IDParameter = login_ID.HasValue ?
                new ObjectParameter("Login_ID", login_ID) :
                new ObjectParameter("Login_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdate_AllShares", typeParameter, listing_IDParameter, login_IDParameter);
        }
    
        public virtual ObjectResult<spUpdate_Assignment_Result> spUpdate_Assignment(Nullable<int> event_ID, Nullable<int> login_ID, Nullable<bool> newValue)
        {
            var event_IDParameter = event_ID.HasValue ?
                new ObjectParameter("Event_ID", event_ID) :
                new ObjectParameter("Event_ID", typeof(int));
    
            var login_IDParameter = login_ID.HasValue ?
                new ObjectParameter("Login_ID", login_ID) :
                new ObjectParameter("Login_ID", typeof(int));
    
            var newValueParameter = newValue.HasValue ?
                new ObjectParameter("NewValue", newValue) :
                new ObjectParameter("NewValue", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spUpdate_Assignment_Result>("spUpdate_Assignment", event_IDParameter, login_IDParameter, newValueParameter);
        }
    
        public virtual ObjectResult<spUpdate_Price_Result> spUpdate_Price(Nullable<int> listing_ID, Nullable<decimal> current, string title, Nullable<int> login_ID)
        {
            var listing_IDParameter = listing_ID.HasValue ?
                new ObjectParameter("Listing_ID", listing_ID) :
                new ObjectParameter("Listing_ID", typeof(int));
    
            var currentParameter = current.HasValue ?
                new ObjectParameter("Current", current) :
                new ObjectParameter("Current", typeof(decimal));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var login_IDParameter = login_ID.HasValue ?
                new ObjectParameter("Login_ID", login_ID) :
                new ObjectParameter("Login_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spUpdate_Price_Result>("spUpdate_Price", listing_IDParameter, currentParameter, titleParameter, login_IDParameter);
        }
    
        public virtual ObjectResult<spUpdate_Share_Result> spUpdate_Share(string type, Nullable<int> listing_ID, string broker, Nullable<int> login_ID)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var listing_IDParameter = listing_ID.HasValue ?
                new ObjectParameter("Listing_ID", listing_ID) :
                new ObjectParameter("Listing_ID", typeof(int));
    
            var brokerParameter = broker != null ?
                new ObjectParameter("Broker", broker) :
                new ObjectParameter("Broker", typeof(string));
    
            var login_IDParameter = login_ID.HasValue ?
                new ObjectParameter("Login_ID", login_ID) :
                new ObjectParameter("Login_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spUpdate_Share_Result>("spUpdate_Share", typeParameter, listing_IDParameter, brokerParameter, login_IDParameter);
        }
    
        public virtual int spUpdate_SHEvent(Nullable<int> event_ID, Nullable<int> eventId, string eventName, Nullable<System.DateTime> event_Date)
        {
            var event_IDParameter = event_ID.HasValue ?
                new ObjectParameter("Event_ID", event_ID) :
                new ObjectParameter("Event_ID", typeof(int));
    
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("eventId", eventId) :
                new ObjectParameter("eventId", typeof(int));
    
            var eventNameParameter = eventName != null ?
                new ObjectParameter("EventName", eventName) :
                new ObjectParameter("EventName", typeof(string));
    
            var event_DateParameter = event_Date.HasValue ?
                new ObjectParameter("Event_Date", event_Date) :
                new ObjectParameter("Event_Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdate_SHEvent", event_IDParameter, eventIdParameter, eventNameParameter, event_DateParameter);
        }
    
        public virtual int spUser_CreateLogin(Nullable<int> login_ID, string name, string email, string password, Nullable<bool> admin)
        {
            var login_IDParameter = login_ID.HasValue ?
                new ObjectParameter("Login_ID", login_ID) :
                new ObjectParameter("Login_ID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var adminParameter = admin.HasValue ?
                new ObjectParameter("Admin", admin) :
                new ObjectParameter("Admin", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUser_CreateLogin", login_IDParameter, nameParameter, emailParameter, passwordParameter, adminParameter);
        }
    
        public virtual ObjectResult<spUser_GetLogin_Result> spUser_GetLogin(Nullable<int> login_ID)
        {
            var login_IDParameter = login_ID.HasValue ?
                new ObjectParameter("Login_ID", login_ID) :
                new ObjectParameter("Login_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spUser_GetLogin_Result>("spUser_GetLogin", login_IDParameter);
        }
    
        public virtual ObjectResult<spUser_Login_Result> spUser_Login(string userName, string password)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spUser_Login_Result>("spUser_Login", userNameParameter, passwordParameter);
        }
    
        public virtual int spUser_Update(Nullable<int> login_ID, string field, string oldValue, string newValue)
        {
            var login_IDParameter = login_ID.HasValue ?
                new ObjectParameter("Login_ID", login_ID) :
                new ObjectParameter("Login_ID", typeof(int));
    
            var fieldParameter = field != null ?
                new ObjectParameter("Field", field) :
                new ObjectParameter("Field", typeof(string));
    
            var oldValueParameter = oldValue != null ?
                new ObjectParameter("OldValue", oldValue) :
                new ObjectParameter("OldValue", typeof(string));
    
            var newValueParameter = newValue != null ?
                new ObjectParameter("NewValue", newValue) :
                new ObjectParameter("NewValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUser_Update", login_IDParameter, fieldParameter, oldValueParameter, newValueParameter);
        }
    
        public virtual ObjectResult<spGet_InvoiceInfo_Result> spGet_InvoiceInfo(Nullable<int> invoice_id)
        {
            var invoice_idParameter = invoice_id.HasValue ?
                new ObjectParameter("invoice_id", invoice_id) :
                new ObjectParameter("invoice_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_InvoiceInfo_Result>("spGet_InvoiceInfo", invoice_idParameter);
        }
    
        public virtual ObjectResult<spGet_InvoiceItems_Result> spGet_InvoiceItems(Nullable<int> invoice_id)
        {
            var invoice_idParameter = invoice_id.HasValue ?
                new ObjectParameter("invoice_id", invoice_id) :
                new ObjectParameter("invoice_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_InvoiceItems_Result>("spGet_InvoiceItems", invoice_idParameter);
        }
    
        public virtual ObjectResult<spGet_InvoiceBillTo_Result> spGet_InvoiceBillTo(Nullable<int> invoice_id)
        {
            var invoice_idParameter = invoice_id.HasValue ?
                new ObjectParameter("invoice_id", invoice_id) :
                new ObjectParameter("invoice_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_InvoiceBillTo_Result>("spGet_InvoiceBillTo", invoice_idParameter);
        }
    
        public virtual ObjectResult<spGet_InvoiceShipTo_Result> spGet_InvoiceShipTo(Nullable<int> invoice_id)
        {
            var invoice_idParameter = invoice_id.HasValue ?
                new ObjectParameter("invoice_id", invoice_id) :
                new ObjectParameter("invoice_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_InvoiceShipTo_Result>("spGet_InvoiceShipTo", invoice_idParameter);
        }
    
        public virtual ObjectResult<spGet_InvoicePayment_Result> spGet_InvoicePayment(Nullable<int> invoice_id)
        {
            var invoice_idParameter = invoice_id.HasValue ?
                new ObjectParameter("invoice_id", invoice_id) :
                new ObjectParameter("invoice_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_InvoicePayment_Result>("spGet_InvoicePayment", invoice_idParameter);
        }
    
        public virtual ObjectResult<spUpdate_SHPrice_Result> spUpdate_SHPrice(Nullable<int> listing_ID, Nullable<decimal> current, string title, Nullable<int> login_ID)
        {
            var listing_IDParameter = listing_ID.HasValue ?
                new ObjectParameter("Listing_ID", listing_ID) :
                new ObjectParameter("Listing_ID", typeof(int));
    
            var currentParameter = current.HasValue ?
                new ObjectParameter("Current", current) :
                new ObjectParameter("Current", typeof(decimal));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var login_IDParameter = login_ID.HasValue ?
                new ObjectParameter("Login_ID", login_ID) :
                new ObjectParameter("Login_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spUpdate_SHPrice_Result>("spUpdate_SHPrice", listing_IDParameter, currentParameter, titleParameter, login_IDParameter);
        }
    
        public virtual ObjectResult<spGet_ESCategories_Result> spGet_ESCategories(Nullable<System.DateTime> start, Nullable<System.DateTime> end, Nullable<int> performer_ID, Nullable<int> venue_ID)
        {
            var startParameter = start.HasValue ?
                new ObjectParameter("Start", start) :
                new ObjectParameter("Start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(System.DateTime));
    
            var performer_IDParameter = performer_ID.HasValue ?
                new ObjectParameter("Performer_ID", performer_ID) :
                new ObjectParameter("Performer_ID", typeof(int));
    
            var venue_IDParameter = venue_ID.HasValue ?
                new ObjectParameter("Venue_ID", venue_ID) :
                new ObjectParameter("Venue_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_ESCategories_Result>("spGet_ESCategories", startParameter, endParameter, performer_IDParameter, venue_IDParameter);
        }
    
        public virtual ObjectResult<spGet_ESPerformers_Result> spGet_ESPerformers(Nullable<System.DateTime> start, Nullable<System.DateTime> end, Nullable<int> cat_ID, Nullable<int> venue_ID)
        {
            var startParameter = start.HasValue ?
                new ObjectParameter("Start", start) :
                new ObjectParameter("Start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(System.DateTime));
    
            var cat_IDParameter = cat_ID.HasValue ?
                new ObjectParameter("Cat_ID", cat_ID) :
                new ObjectParameter("Cat_ID", typeof(int));
    
            var venue_IDParameter = venue_ID.HasValue ?
                new ObjectParameter("Venue_ID", venue_ID) :
                new ObjectParameter("Venue_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_ESPerformers_Result>("spGet_ESPerformers", startParameter, endParameter, cat_IDParameter, venue_IDParameter);
        }
    
        public virtual ObjectResult<spGet_ESVenues_Result> spGet_ESVenues(Nullable<System.DateTime> start, Nullable<System.DateTime> end, Nullable<int> cat_ID, Nullable<int> performer_ID)
        {
            var startParameter = start.HasValue ?
                new ObjectParameter("Start", start) :
                new ObjectParameter("Start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(System.DateTime));
    
            var cat_IDParameter = cat_ID.HasValue ?
                new ObjectParameter("Cat_ID", cat_ID) :
                new ObjectParameter("Cat_ID", typeof(int));
    
            var performer_IDParameter = performer_ID.HasValue ?
                new ObjectParameter("Performer_ID", performer_ID) :
                new ObjectParameter("Performer_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_ESVenues_Result>("spGet_ESVenues", startParameter, endParameter, cat_IDParameter, performer_IDParameter);
        }
    
        public virtual ObjectResult<spGet_EventStatus_Result> spGet_EventStatus(Nullable<System.DateTime> start, Nullable<System.DateTime> end, Nullable<int> cat_ID, Nullable<int> performer_ID, Nullable<int> venue_ID)
        {
            var startParameter = start.HasValue ?
                new ObjectParameter("Start", start) :
                new ObjectParameter("Start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(System.DateTime));
    
            var cat_IDParameter = cat_ID.HasValue ?
                new ObjectParameter("Cat_ID", cat_ID) :
                new ObjectParameter("Cat_ID", typeof(int));
    
            var performer_IDParameter = performer_ID.HasValue ?
                new ObjectParameter("Performer_ID", performer_ID) :
                new ObjectParameter("Performer_ID", typeof(int));
    
            var venue_IDParameter = venue_ID.HasValue ?
                new ObjectParameter("Venue_ID", venue_ID) :
                new ObjectParameter("Venue_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_EventStatus_Result>("spGet_EventStatus", startParameter, endParameter, cat_IDParameter, performer_IDParameter, venue_IDParameter);
        }
    
        public virtual ObjectResult<spGet_PresalesForEvent2_Result> spGet_PresalesForEvent2(Nullable<int> event_ID)
        {
            var event_IDParameter = event_ID.HasValue ?
                new ObjectParameter("Event_ID", event_ID) :
                new ObjectParameter("Event_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_PresalesForEvent2_Result>("spGet_PresalesForEvent2", event_IDParameter);
        }
    
        public virtual ObjectResult<spGet_EventStatus3_Result> spGet_EventStatus3(Nullable<System.DateTime> start, Nullable<System.DateTime> end, Nullable<int> cat_ID, Nullable<int> performer_ID, Nullable<int> venue_ID)
        {
            var startParameter = start.HasValue ?
                new ObjectParameter("Start", start) :
                new ObjectParameter("Start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(System.DateTime));
    
            var cat_IDParameter = cat_ID.HasValue ?
                new ObjectParameter("Cat_ID", cat_ID) :
                new ObjectParameter("Cat_ID", typeof(int));
    
            var performer_IDParameter = performer_ID.HasValue ?
                new ObjectParameter("Performer_ID", performer_ID) :
                new ObjectParameter("Performer_ID", typeof(int));
    
            var venue_IDParameter = venue_ID.HasValue ?
                new ObjectParameter("Venue_ID", venue_ID) :
                new ObjectParameter("Venue_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_EventStatus3_Result>("spGet_EventStatus3", startParameter, endParameter, cat_IDParameter, performer_IDParameter, venue_IDParameter);
        }
    
        public virtual ObjectResult<spSearch_Performers_Result> spSearch_Performers(string search, Nullable<System.DateTime> start, Nullable<System.DateTime> end)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("Start", start) :
                new ObjectParameter("Start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSearch_Performers_Result>("spSearch_Performers", searchParameter, startParameter, endParameter);
        }
    
        public virtual ObjectResult<spGet_CatParents_Result> spGet_CatParents()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_CatParents_Result>("spGet_CatParents");
        }
    
        public virtual ObjectResult<spGet_EventStatus1_Result> spGet_EventStatus1(Nullable<System.DateTime> start, Nullable<System.DateTime> end, Nullable<int> venue_ID, Nullable<int> parent_ID)
        {
            var startParameter = start.HasValue ?
                new ObjectParameter("Start", start) :
                new ObjectParameter("Start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(System.DateTime));
    
            var venue_IDParameter = venue_ID.HasValue ?
                new ObjectParameter("Venue_ID", venue_ID) :
                new ObjectParameter("Venue_ID", typeof(int));
    
            var parent_IDParameter = parent_ID.HasValue ?
                new ObjectParameter("Parent_ID", parent_ID) :
                new ObjectParameter("Parent_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_EventStatus1_Result>("spGet_EventStatus1", startParameter, endParameter, venue_IDParameter, parent_IDParameter);
        }
    
        public virtual ObjectResult<spGet_EventStatus2_Result> spGet_EventStatus2(Nullable<System.DateTime> start, Nullable<System.DateTime> end, Nullable<int> cat_ID, Nullable<int> venue_ID, Nullable<int> parent_ID)
        {
            var startParameter = start.HasValue ?
                new ObjectParameter("Start", start) :
                new ObjectParameter("Start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(System.DateTime));
    
            var cat_IDParameter = cat_ID.HasValue ?
                new ObjectParameter("Cat_ID", cat_ID) :
                new ObjectParameter("Cat_ID", typeof(int));
    
            var venue_IDParameter = venue_ID.HasValue ?
                new ObjectParameter("Venue_ID", venue_ID) :
                new ObjectParameter("Venue_ID", typeof(int));
    
            var parent_IDParameter = parent_ID.HasValue ?
                new ObjectParameter("Parent_ID", parent_ID) :
                new ObjectParameter("Parent_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_EventStatus2_Result>("spGet_EventStatus2", startParameter, endParameter, cat_IDParameter, venue_IDParameter, parent_IDParameter);
        }
    
        public virtual ObjectResult<spHold_Release_Result> spHold_Release(Nullable<int> transaction_ID, Nullable<int> login_ID)
        {
            var transaction_IDParameter = transaction_ID.HasValue ?
                new ObjectParameter("Transaction_ID", transaction_ID) :
                new ObjectParameter("Transaction_ID", typeof(int));
    
            var login_IDParameter = login_ID.HasValue ?
                new ObjectParameter("Login_ID", login_ID) :
                new ObjectParameter("Login_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spHold_Release_Result>("spHold_Release", transaction_IDParameter, login_IDParameter);
        }
    
        public virtual ObjectResult<spHold_Create_Result> spHold_Create(Nullable<int> login_ID, Nullable<int> listing_ID, Nullable<int> qty, Nullable<int> minutes, string notes)
        {
            var login_IDParameter = login_ID.HasValue ?
                new ObjectParameter("Login_ID", login_ID) :
                new ObjectParameter("Login_ID", typeof(int));
    
            var listing_IDParameter = listing_ID.HasValue ?
                new ObjectParameter("Listing_ID", listing_ID) :
                new ObjectParameter("Listing_ID", typeof(int));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("Qty", qty) :
                new ObjectParameter("Qty", typeof(int));
    
            var minutesParameter = minutes.HasValue ?
                new ObjectParameter("Minutes", minutes) :
                new ObjectParameter("Minutes", typeof(int));
    
            var notesParameter = notes != null ?
                new ObjectParameter("Notes", notes) :
                new ObjectParameter("Notes", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spHold_Create_Result>("spHold_Create", login_IDParameter, listing_IDParameter, qtyParameter, minutesParameter, notesParameter);
        }
    
        public virtual int spBulk_Dollar(string listing_IDs, Nullable<decimal> amount, Nullable<int> login_ID, string title)
        {
            var listing_IDsParameter = listing_IDs != null ?
                new ObjectParameter("Listing_IDs", listing_IDs) :
                new ObjectParameter("Listing_IDs", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var login_IDParameter = login_ID.HasValue ?
                new ObjectParameter("Login_ID", login_ID) :
                new ObjectParameter("Login_ID", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spBulk_Dollar", listing_IDsParameter, amountParameter, login_IDParameter, titleParameter);
        }
    
        public virtual int spBulk_Notes(string listing_IDs, string note, Nullable<int> login_ID)
        {
            var listing_IDsParameter = listing_IDs != null ?
                new ObjectParameter("Listing_IDs", listing_IDs) :
                new ObjectParameter("Listing_IDs", typeof(string));
    
            var noteParameter = note != null ?
                new ObjectParameter("Note", note) :
                new ObjectParameter("Note", typeof(string));
    
            var login_IDParameter = login_ID.HasValue ?
                new ObjectParameter("Login_ID", login_ID) :
                new ObjectParameter("Login_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spBulk_Notes", listing_IDsParameter, noteParameter, login_IDParameter);
        }
    
        public virtual int spBulk_Percent(string listing_IDs, Nullable<int> percent, Nullable<int> login_ID, string title)
        {
            var listing_IDsParameter = listing_IDs != null ?
                new ObjectParameter("Listing_IDs", listing_IDs) :
                new ObjectParameter("Listing_IDs", typeof(string));
    
            var percentParameter = percent.HasValue ?
                new ObjectParameter("Percent", percent) :
                new ObjectParameter("Percent", typeof(int));
    
            var login_IDParameter = login_ID.HasValue ?
                new ObjectParameter("Login_ID", login_ID) :
                new ObjectParameter("Login_ID", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spBulk_Percent", listing_IDsParameter, percentParameter, login_IDParameter, titleParameter);
        }
    
        public virtual int spBulk_Shares(string listing_IDs, string type, string broker, Nullable<int> login_ID)
        {
            var listing_IDsParameter = listing_IDs != null ?
                new ObjectParameter("Listing_IDs", listing_IDs) :
                new ObjectParameter("Listing_IDs", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var brokerParameter = broker != null ?
                new ObjectParameter("Broker", broker) :
                new ObjectParameter("Broker", typeof(string));
    
            var login_IDParameter = login_ID.HasValue ?
                new ObjectParameter("Login_ID", login_ID) :
                new ObjectParameter("Login_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spBulk_Shares", listing_IDsParameter, typeParameter, brokerParameter, login_IDParameter);
        }
    
        public virtual int spBulk_Hold(string listing_IDs, string transaction_IDs, string type, Nullable<int> login_ID)
        {
            var listing_IDsParameter = listing_IDs != null ?
                new ObjectParameter("Listing_IDs", listing_IDs) :
                new ObjectParameter("Listing_IDs", typeof(string));
    
            var transaction_IDsParameter = transaction_IDs != null ?
                new ObjectParameter("Transaction_IDs", transaction_IDs) :
                new ObjectParameter("Transaction_IDs", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var login_IDParameter = login_ID.HasValue ?
                new ObjectParameter("Login_ID", login_ID) :
                new ObjectParameter("Login_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spBulk_Hold", listing_IDsParameter, transaction_IDsParameter, typeParameter, login_IDParameter);
        }
    
        public virtual ObjectResult<spGET_ShippingMethod_Result> spGET_ShippingMethod()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_ShippingMethod_Result>("spGET_ShippingMethod");
        }
    
        public virtual ObjectResult<spSearch_InvoiceList2_Result> spSearch_InvoiceList2(string search, Nullable<byte> status, string type, Nullable<System.DateTime> start, Nullable<System.DateTime> end)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(byte));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("Start", start) :
                new ObjectParameter("Start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSearch_InvoiceList2_Result>("spSearch_InvoiceList2", searchParameter, statusParameter, typeParameter, startParameter, endParameter);
        }
    
        public virtual int spUpdate_Method(Nullable<int> invoice_ID, Nullable<int> method_ID, Nullable<int> login_ID)
        {
            var invoice_IDParameter = invoice_ID.HasValue ?
                new ObjectParameter("Invoice_ID", invoice_ID) :
                new ObjectParameter("Invoice_ID", typeof(int));
    
            var method_IDParameter = method_ID.HasValue ?
                new ObjectParameter("Method_ID", method_ID) :
                new ObjectParameter("Method_ID", typeof(int));
    
            var login_IDParameter = login_ID.HasValue ?
                new ObjectParameter("Login_ID", login_ID) :
                new ObjectParameter("Login_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdate_Method", invoice_IDParameter, method_IDParameter, login_IDParameter);
        }
    
        public virtual ObjectResult<spUpdate_Tracking_Result> spUpdate_Tracking(string type, Nullable<int> invoice_ID, string tracking, Nullable<int> login_ID)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var invoice_IDParameter = invoice_ID.HasValue ?
                new ObjectParameter("Invoice_ID", invoice_ID) :
                new ObjectParameter("Invoice_ID", typeof(int));
    
            var trackingParameter = tracking != null ?
                new ObjectParameter("Tracking", tracking) :
                new ObjectParameter("Tracking", typeof(string));
    
            var login_IDParameter = login_ID.HasValue ?
                new ObjectParameter("Login_ID", login_ID) :
                new ObjectParameter("Login_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spUpdate_Tracking_Result>("spUpdate_Tracking", typeParameter, invoice_IDParameter, trackingParameter, login_IDParameter);
        }
    
        public virtual int spSend_Email(string address, string subject, string message)
        {
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSend_Email", addressParameter, subjectParameter, messageParameter);
        }
    
        public virtual int spAdd_AutoPrintInfo(Nullable<int> invoice_ID, string data)
        {
            var invoice_IDParameter = invoice_ID.HasValue ?
                new ObjectParameter("Invoice_ID", invoice_ID) :
                new ObjectParameter("Invoice_ID", typeof(int));
    
            var dataParameter = data != null ?
                new ObjectParameter("Data", data) :
                new ObjectParameter("Data", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAdd_AutoPrintInfo", invoice_IDParameter, dataParameter);
        }
    
        public virtual int spAdd_AutoPrint2Info(Nullable<int> invoice_ID, Nullable<byte> source, string data)
        {
            var invoice_IDParameter = invoice_ID.HasValue ?
                new ObjectParameter("Invoice_ID", invoice_ID) :
                new ObjectParameter("Invoice_ID", typeof(int));
    
            var sourceParameter = source.HasValue ?
                new ObjectParameter("Source", source) :
                new ObjectParameter("Source", typeof(byte));
    
            var dataParameter = data != null ?
                new ObjectParameter("Data", data) :
                new ObjectParameter("Data", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAdd_AutoPrint2Info", invoice_IDParameter, sourceParameter, dataParameter);
        }
    
        public virtual ObjectResult<spExport_EventStatus2_Result> spExport_EventStatus2(Nullable<System.DateTime> start, Nullable<System.DateTime> end, Nullable<int> cat_ID, Nullable<int> venue_ID, Nullable<int> parent_ID)
        {
            var startParameter = start.HasValue ?
                new ObjectParameter("Start", start) :
                new ObjectParameter("Start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(System.DateTime));
    
            var cat_IDParameter = cat_ID.HasValue ?
                new ObjectParameter("Cat_ID", cat_ID) :
                new ObjectParameter("Cat_ID", typeof(int));
    
            var venue_IDParameter = venue_ID.HasValue ?
                new ObjectParameter("Venue_ID", venue_ID) :
                new ObjectParameter("Venue_ID", typeof(int));
    
            var parent_IDParameter = parent_ID.HasValue ?
                new ObjectParameter("Parent_ID", parent_ID) :
                new ObjectParameter("Parent_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spExport_EventStatus2_Result>("spExport_EventStatus2", startParameter, endParameter, cat_IDParameter, venue_IDParameter, parent_IDParameter);
        }
    
        public virtual ObjectResult<spExport_EventStatus3_Result> spExport_EventStatus3(Nullable<System.DateTime> start, Nullable<System.DateTime> end, Nullable<int> cat_ID, Nullable<int> performer_ID, Nullable<int> venue_ID)
        {
            var startParameter = start.HasValue ?
                new ObjectParameter("Start", start) :
                new ObjectParameter("Start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(System.DateTime));
    
            var cat_IDParameter = cat_ID.HasValue ?
                new ObjectParameter("Cat_ID", cat_ID) :
                new ObjectParameter("Cat_ID", typeof(int));
    
            var performer_IDParameter = performer_ID.HasValue ?
                new ObjectParameter("Performer_ID", performer_ID) :
                new ObjectParameter("Performer_ID", typeof(int));
    
            var venue_IDParameter = venue_ID.HasValue ?
                new ObjectParameter("Venue_ID", venue_ID) :
                new ObjectParameter("Venue_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spExport_EventStatus3_Result>("spExport_EventStatus3", startParameter, endParameter, cat_IDParameter, performer_IDParameter, venue_IDParameter);
        }
    
        public virtual ObjectResult<spExport_EventStatus1_Result> spExport_EventStatus1(Nullable<System.DateTime> start, Nullable<System.DateTime> end, Nullable<int> venue_ID, Nullable<int> cat_ID)
        {
            var startParameter = start.HasValue ?
                new ObjectParameter("Start", start) :
                new ObjectParameter("Start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(System.DateTime));
    
            var venue_IDParameter = venue_ID.HasValue ?
                new ObjectParameter("Venue_ID", venue_ID) :
                new ObjectParameter("Venue_ID", typeof(int));
    
            var cat_IDParameter = cat_ID.HasValue ?
                new ObjectParameter("Cat_ID", cat_ID) :
                new ObjectParameter("Cat_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spExport_EventStatus1_Result>("spExport_EventStatus1", startParameter, endParameter, venue_IDParameter, cat_IDParameter);
        }
    
        public virtual int spUpdate_SectionZone(Nullable<int> eventId, string input)
        {
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("eventId", eventId) :
                new ObjectParameter("eventId", typeof(int));
    
            var inputParameter = input != null ?
                new ObjectParameter("Input", input) :
                new ObjectParameter("Input", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdate_SectionZone", eventIdParameter, inputParameter);
        }
    
        public virtual ObjectResult<spWeather_GetForecast_Result> spWeather_GetForecast(string city, Nullable<System.DateTime> eventDate)
        {
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var eventDateParameter = eventDate.HasValue ?
                new ObjectParameter("EventDate", eventDate) :
                new ObjectParameter("EventDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spWeather_GetForecast_Result>("spWeather_GetForecast", cityParameter, eventDateParameter);
        }
    
        public virtual ObjectResult<spRanking_GetEventRankings_Result> spRanking_GetEventRankings(Nullable<int> event_ID)
        {
            var event_IDParameter = event_ID.HasValue ?
                new ObjectParameter("Event_ID", event_ID) :
                new ObjectParameter("Event_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spRanking_GetEventRankings_Result>("spRanking_GetEventRankings", event_IDParameter);
        }
    
        public virtual ObjectResult<spChart_Gather_Result> spChart_Gather(Nullable<int> event_ID, Nullable<int> source_ID, Nullable<int> type_ID, string filterType, string filter, Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var event_IDParameter = event_ID.HasValue ?
                new ObjectParameter("Event_ID", event_ID) :
                new ObjectParameter("Event_ID", typeof(int));
    
            var source_IDParameter = source_ID.HasValue ?
                new ObjectParameter("Source_ID", source_ID) :
                new ObjectParameter("Source_ID", typeof(int));
    
            var type_IDParameter = type_ID.HasValue ?
                new ObjectParameter("Type_ID", type_ID) :
                new ObjectParameter("Type_ID", typeof(int));
    
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spChart_Gather_Result>("spChart_Gather", event_IDParameter, source_IDParameter, type_IDParameter, filterTypeParameter, filterParameter, fromParameter, toParameter);
        }
    
        public virtual ObjectResult<spGet_ItemsForEventAvailable_Result> spGet_ItemsForEventAvailable(Nullable<int> event_ID, Nullable<int> pO_ID)
        {
            var event_IDParameter = event_ID.HasValue ?
                new ObjectParameter("Event_ID", event_ID) :
                new ObjectParameter("Event_ID", typeof(int));
    
            var pO_IDParameter = pO_ID.HasValue ?
                new ObjectParameter("PO_ID", pO_ID) :
                new ObjectParameter("PO_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_ItemsForEventAvailable_Result>("spGet_ItemsForEventAvailable", event_IDParameter, pO_IDParameter);
        }
    
        public virtual ObjectResult<spGet_SeasonList_Result> spGet_SeasonList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_SeasonList_Result>("spGet_SeasonList");
        }
    
        public virtual ObjectResult<spGet_SeasonGames_Result> spGet_SeasonGames(Nullable<int> ticketGroup_ID)
        {
            var ticketGroup_IDParameter = ticketGroup_ID.HasValue ?
                new ObjectParameter("TicketGroup_ID", ticketGroup_ID) :
                new ObjectParameter("TicketGroup_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_SeasonGames_Result>("spGet_SeasonGames", ticketGroup_IDParameter);
        }
    
        public virtual ObjectResult<spGet_MissingEvents_Result> spGet_MissingEvents(Nullable<int> ticket_Group_ID)
        {
            var ticket_Group_IDParameter = ticket_Group_ID.HasValue ?
                new ObjectParameter("Ticket_Group_ID", ticket_Group_ID) :
                new ObjectParameter("Ticket_Group_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_MissingEvents_Result>("spGet_MissingEvents", ticket_Group_IDParameter);
        }
    
        public virtual ObjectResult<spExchange_AddEvents_Result> spExchange_AddEvents(Nullable<int> ticket_Group_ID, Nullable<int> login_ID, string data)
        {
            var ticket_Group_IDParameter = ticket_Group_ID.HasValue ?
                new ObjectParameter("Ticket_Group_ID", ticket_Group_ID) :
                new ObjectParameter("Ticket_Group_ID", typeof(int));
    
            var login_IDParameter = login_ID.HasValue ?
                new ObjectParameter("Login_ID", login_ID) :
                new ObjectParameter("Login_ID", typeof(int));
    
            var dataParameter = data != null ?
                new ObjectParameter("Data", data) :
                new ObjectParameter("Data", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spExchange_AddEvents_Result>("spExchange_AddEvents", ticket_Group_IDParameter, login_IDParameter, dataParameter);
        }
    
        public virtual ObjectResult<spSplit_New_Result> spSplit_New(Nullable<int> listing_ID, string data, Nullable<int> login_ID)
        {
            var listing_IDParameter = listing_ID.HasValue ?
                new ObjectParameter("Listing_ID", listing_ID) :
                new ObjectParameter("Listing_ID", typeof(int));
    
            var dataParameter = data != null ?
                new ObjectParameter("Data", data) :
                new ObjectParameter("Data", typeof(string));
    
            var login_IDParameter = login_ID.HasValue ?
                new ObjectParameter("Login_ID", login_ID) :
                new ObjectParameter("Login_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSplit_New_Result>("spSplit_New", listing_IDParameter, dataParameter, login_IDParameter);
        }
    
        public virtual ObjectResult<spSeason_History_Result> spSeason_History()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSeason_History_Result>("spSeason_History");
        }
    
        public virtual ObjectResult<spGet_POInfo_Result> spGet_POInfo(Nullable<int> po_id)
        {
            var po_idParameter = po_id.HasValue ?
                new ObjectParameter("po_id", po_id) :
                new ObjectParameter("po_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_POInfo_Result>("spGet_POInfo", po_idParameter);
        }
    
        public virtual ObjectResult<spGet_POItems_Result> spGet_POItems(Nullable<int> po_id)
        {
            var po_idParameter = po_id.HasValue ?
                new ObjectParameter("po_id", po_id) :
                new ObjectParameter("po_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_POItems_Result>("spGet_POItems", po_idParameter);
        }
    
        public virtual ObjectResult<spGet_POPayment_Result> spGet_POPayment(Nullable<int> po_id)
        {
            var po_idParameter = po_id.HasValue ?
                new ObjectParameter("po_id", po_id) :
                new ObjectParameter("po_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_POPayment_Result>("spGet_POPayment", po_idParameter);
        }
    
        public virtual ObjectResult<spGet_POVendor_Result> spGet_POVendor(Nullable<int> po_id)
        {
            var po_idParameter = po_id.HasValue ?
                new ObjectParameter("po_id", po_id) :
                new ObjectParameter("po_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_POVendor_Result>("spGet_POVendor", po_idParameter);
        }
    
        public virtual ObjectResult<spGet_POSearch_Result> spGet_POSearch(Nullable<int> pO_ID)
        {
            var pO_IDParameter = pO_ID.HasValue ?
                new ObjectParameter("PO_ID", pO_ID) :
                new ObjectParameter("PO_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_POSearch_Result>("spGet_POSearch", pO_IDParameter);
        }
    
        public virtual ObjectResult<spGet_ItemsForEventSold_Result> spGet_ItemsForEventSold(Nullable<int> event_ID, Nullable<int> pO_ID)
        {
            var event_IDParameter = event_ID.HasValue ?
                new ObjectParameter("Event_ID", event_ID) :
                new ObjectParameter("Event_ID", typeof(int));
    
            var pO_IDParameter = pO_ID.HasValue ?
                new ObjectParameter("PO_ID", pO_ID) :
                new ObjectParameter("PO_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_ItemsForEventSold_Result>("spGet_ItemsForEventSold", event_IDParameter, pO_IDParameter);
        }
    
        public virtual ObjectResult<spGet_Inventory_Result> spGet_Inventory(Nullable<int> parent_ID, Nullable<int> child_ID, Nullable<int> grandchild_ID, Nullable<int> range)
        {
            var parent_IDParameter = parent_ID.HasValue ?
                new ObjectParameter("Parent_ID", parent_ID) :
                new ObjectParameter("Parent_ID", typeof(int));
    
            var child_IDParameter = child_ID.HasValue ?
                new ObjectParameter("Child_ID", child_ID) :
                new ObjectParameter("Child_ID", typeof(int));
    
            var grandchild_IDParameter = grandchild_ID.HasValue ?
                new ObjectParameter("Grandchild_ID", grandchild_ID) :
                new ObjectParameter("Grandchild_ID", typeof(int));
    
            var rangeParameter = range.HasValue ?
                new ObjectParameter("Range", range) :
                new ObjectParameter("Range", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_Inventory_Result>("spGet_Inventory", parent_IDParameter, child_IDParameter, grandchild_IDParameter, rangeParameter);
        }
    
        public virtual ObjectResult<spGet_POList_Result> spGet_POList(Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<bool> allDates, Nullable<bool> eventOnly, Nullable<bool> vendorOnly, Nullable<bool> agentOnly, Nullable<bool> voidOnly, string search)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            var allDatesParameter = allDates.HasValue ?
                new ObjectParameter("AllDates", allDates) :
                new ObjectParameter("AllDates", typeof(bool));
    
            var eventOnlyParameter = eventOnly.HasValue ?
                new ObjectParameter("EventOnly", eventOnly) :
                new ObjectParameter("EventOnly", typeof(bool));
    
            var vendorOnlyParameter = vendorOnly.HasValue ?
                new ObjectParameter("VendorOnly", vendorOnly) :
                new ObjectParameter("VendorOnly", typeof(bool));
    
            var agentOnlyParameter = agentOnly.HasValue ?
                new ObjectParameter("AgentOnly", agentOnly) :
                new ObjectParameter("AgentOnly", typeof(bool));
    
            var voidOnlyParameter = voidOnly.HasValue ?
                new ObjectParameter("VoidOnly", voidOnly) :
                new ObjectParameter("VoidOnly", typeof(bool));
    
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_POList_Result>("spGet_POList", fromParameter, toParameter, allDatesParameter, eventOnlyParameter, vendorOnlyParameter, agentOnlyParameter, voidOnlyParameter, searchParameter);
        }
    
        public virtual ObjectResult<spGet_714List_Result> spGet_714List()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_714List_Result>("spGet_714List");
        }
    
        public virtual ObjectResult<spGet_EventsForGrandchild_Result> spGet_EventsForGrandchild(Nullable<int> parent_ID, Nullable<int> child_ID, Nullable<int> grandchild_ID, Nullable<int> range)
        {
            var parent_IDParameter = parent_ID.HasValue ?
                new ObjectParameter("Parent_ID", parent_ID) :
                new ObjectParameter("Parent_ID", typeof(int));
    
            var child_IDParameter = child_ID.HasValue ?
                new ObjectParameter("Child_ID", child_ID) :
                new ObjectParameter("Child_ID", typeof(int));
    
            var grandchild_IDParameter = grandchild_ID.HasValue ?
                new ObjectParameter("Grandchild_ID", grandchild_ID) :
                new ObjectParameter("Grandchild_ID", typeof(int));
    
            var rangeParameter = range.HasValue ?
                new ObjectParameter("Range", range) :
                new ObjectParameter("Range", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_EventsForGrandchild_Result>("spGet_EventsForGrandchild", parent_IDParameter, child_IDParameter, grandchild_IDParameter, rangeParameter);
        }
    
        public virtual ObjectResult<spGet_Exceptions_Result> spGet_Exceptions()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_Exceptions_Result>("spGet_Exceptions");
        }
    
        public virtual ObjectResult<spGet_MissingFromStubhub_Result> spGet_MissingFromStubhub()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_MissingFromStubhub_Result>("spGet_MissingFromStubhub");
        }
    
        public virtual int spException_Add(Nullable<int> performer_ID, string exception, Nullable<int> login_ID)
        {
            var performer_IDParameter = performer_ID.HasValue ?
                new ObjectParameter("Performer_ID", performer_ID) :
                new ObjectParameter("Performer_ID", typeof(int));
    
            var exceptionParameter = exception != null ?
                new ObjectParameter("Exception", exception) :
                new ObjectParameter("Exception", typeof(string));
    
            var login_IDParameter = login_ID.HasValue ?
                new ObjectParameter("Login_ID", login_ID) :
                new ObjectParameter("Login_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spException_Add", performer_IDParameter, exceptionParameter, login_IDParameter);
        }
    
        public virtual int spException_Remove(Nullable<int> exception_ID, Nullable<int> login_ID)
        {
            var exception_IDParameter = exception_ID.HasValue ?
                new ObjectParameter("Exception_ID", exception_ID) :
                new ObjectParameter("Exception_ID", typeof(int));
    
            var login_IDParameter = login_ID.HasValue ?
                new ObjectParameter("Login_ID", login_ID) :
                new ObjectParameter("Login_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spException_Remove", exception_IDParameter, login_IDParameter);
        }
    
        public virtual int sp714_RemoveShare(Nullable<int> code_ID, Nullable<int> login_ID)
        {
            var code_IDParameter = code_ID.HasValue ?
                new ObjectParameter("Code_ID", code_ID) :
                new ObjectParameter("Code_ID", typeof(int));
    
            var login_IDParameter = login_ID.HasValue ?
                new ObjectParameter("Login_ID", login_ID) :
                new ObjectParameter("Login_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp714_RemoveShare", code_IDParameter, login_IDParameter);
        }
    
        public virtual ObjectResult<sp714_AddShare_Result> sp714_AddShare(string name, string code, Nullable<int> login_ID)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var login_IDParameter = login_ID.HasValue ?
                new ObjectParameter("Login_ID", login_ID) :
                new ObjectParameter("Login_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp714_AddShare_Result>("sp714_AddShare", nameParameter, codeParameter, login_IDParameter);
        }
    
        public virtual ObjectResult<spGet_Spec_Result> spGet_Spec(Nullable<int> parent_ID, Nullable<int> child_ID, Nullable<int> grandchild_ID, Nullable<int> range)
        {
            var parent_IDParameter = parent_ID.HasValue ?
                new ObjectParameter("Parent_ID", parent_ID) :
                new ObjectParameter("Parent_ID", typeof(int));
    
            var child_IDParameter = child_ID.HasValue ?
                new ObjectParameter("Child_ID", child_ID) :
                new ObjectParameter("Child_ID", typeof(int));
    
            var grandchild_IDParameter = grandchild_ID.HasValue ?
                new ObjectParameter("Grandchild_ID", grandchild_ID) :
                new ObjectParameter("Grandchild_ID", typeof(int));
    
            var rangeParameter = range.HasValue ?
                new ObjectParameter("Range", range) :
                new ObjectParameter("Range", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_Spec_Result>("spGet_Spec", parent_IDParameter, child_IDParameter, grandchild_IDParameter, rangeParameter);
        }
    
        public virtual ObjectResult<spGet_SpecEventsForGrandchild_Result> spGet_SpecEventsForGrandchild(Nullable<int> parent_ID, Nullable<int> child_ID, Nullable<int> grandchild_ID, Nullable<int> range)
        {
            var parent_IDParameter = parent_ID.HasValue ?
                new ObjectParameter("Parent_ID", parent_ID) :
                new ObjectParameter("Parent_ID", typeof(int));
    
            var child_IDParameter = child_ID.HasValue ?
                new ObjectParameter("Child_ID", child_ID) :
                new ObjectParameter("Child_ID", typeof(int));
    
            var grandchild_IDParameter = grandchild_ID.HasValue ?
                new ObjectParameter("Grandchild_ID", grandchild_ID) :
                new ObjectParameter("Grandchild_ID", typeof(int));
    
            var rangeParameter = range.HasValue ?
                new ObjectParameter("Range", range) :
                new ObjectParameter("Range", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_SpecEventsForGrandchild_Result>("spGet_SpecEventsForGrandchild", parent_IDParameter, child_IDParameter, grandchild_IDParameter, rangeParameter);
        }
    
        public virtual ObjectResult<spGet_Shipping_Result> spGet_Shipping()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_Shipping_Result>("spGet_Shipping");
        }
    
        public virtual ObjectResult<spGet_PayType_Result> spGet_PayType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_PayType_Result>("spGet_PayType");
        }
    
        public virtual ObjectResult<spGet_CustomerSearch_Result> spGet_CustomerSearch(string company, string first, string last, string address1, string address2, string city, string zip, string email, string phone)
        {
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            var firstParameter = first != null ?
                new ObjectParameter("First", first) :
                new ObjectParameter("First", typeof(string));
    
            var lastParameter = last != null ?
                new ObjectParameter("Last", last) :
                new ObjectParameter("Last", typeof(string));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("Address1", address1) :
                new ObjectParameter("Address1", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var zipParameter = zip != null ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_CustomerSearch_Result>("spGet_CustomerSearch", companyParameter, firstParameter, lastParameter, address1Parameter, address2Parameter, cityParameter, zipParameter, emailParameter, phoneParameter);
        }
    
        public virtual ObjectResult<spGet_CountryList_Result> spGet_CountryList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_CountryList_Result>("spGet_CountryList");
        }
    
        public virtual ObjectResult<spGet_StateList_Result> spGet_StateList(Nullable<int> country_ID)
        {
            var country_IDParameter = country_ID.HasValue ?
                new ObjectParameter("Country_ID", country_ID) :
                new ObjectParameter("Country_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_StateList_Result>("spGet_StateList", country_IDParameter);
        }
    
        public virtual ObjectResult<spUpdate_Customer_Result> spUpdate_Customer(Nullable<int> login_ID, Nullable<int> customer_ID, string customerType, string company, string first, string last, string address1, string address2, string city, Nullable<int> state_ID, string zip, Nullable<int> country_ID, string email, string phone, Nullable<bool> taxExempt)
        {
            var login_IDParameter = login_ID.HasValue ?
                new ObjectParameter("Login_ID", login_ID) :
                new ObjectParameter("Login_ID", typeof(int));
    
            var customer_IDParameter = customer_ID.HasValue ?
                new ObjectParameter("Customer_ID", customer_ID) :
                new ObjectParameter("Customer_ID", typeof(int));
    
            var customerTypeParameter = customerType != null ?
                new ObjectParameter("CustomerType", customerType) :
                new ObjectParameter("CustomerType", typeof(string));
    
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            var firstParameter = first != null ?
                new ObjectParameter("First", first) :
                new ObjectParameter("First", typeof(string));
    
            var lastParameter = last != null ?
                new ObjectParameter("Last", last) :
                new ObjectParameter("Last", typeof(string));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("Address1", address1) :
                new ObjectParameter("Address1", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var state_IDParameter = state_ID.HasValue ?
                new ObjectParameter("State_ID", state_ID) :
                new ObjectParameter("State_ID", typeof(int));
    
            var zipParameter = zip != null ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(string));
    
            var country_IDParameter = country_ID.HasValue ?
                new ObjectParameter("Country_ID", country_ID) :
                new ObjectParameter("Country_ID", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var taxExemptParameter = taxExempt.HasValue ?
                new ObjectParameter("TaxExempt", taxExempt) :
                new ObjectParameter("TaxExempt", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spUpdate_Customer_Result>("spUpdate_Customer", login_IDParameter, customer_IDParameter, customerTypeParameter, companyParameter, firstParameter, lastParameter, address1Parameter, address2Parameter, cityParameter, state_IDParameter, zipParameter, country_IDParameter, emailParameter, phoneParameter, taxExemptParameter);
        }
    
        public virtual ObjectResult<spHold_Create2_Result> spHold_Create2(Nullable<int> login_ID, Nullable<int> listing_ID, Nullable<int> qty, Nullable<decimal> sale_price, Nullable<int> client_id, Nullable<int> client_broker_id, Nullable<int> shipping_account_delivery_method_id, string external_notes, string internal_notes, string notes, Nullable<int> minutes)
        {
            var login_IDParameter = login_ID.HasValue ?
                new ObjectParameter("Login_ID", login_ID) :
                new ObjectParameter("Login_ID", typeof(int));
    
            var listing_IDParameter = listing_ID.HasValue ?
                new ObjectParameter("Listing_ID", listing_ID) :
                new ObjectParameter("Listing_ID", typeof(int));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("Qty", qty) :
                new ObjectParameter("Qty", typeof(int));
    
            var sale_priceParameter = sale_price.HasValue ?
                new ObjectParameter("sale_price", sale_price) :
                new ObjectParameter("sale_price", typeof(decimal));
    
            var client_idParameter = client_id.HasValue ?
                new ObjectParameter("client_id", client_id) :
                new ObjectParameter("client_id", typeof(int));
    
            var client_broker_idParameter = client_broker_id.HasValue ?
                new ObjectParameter("client_broker_id", client_broker_id) :
                new ObjectParameter("client_broker_id", typeof(int));
    
            var shipping_account_delivery_method_idParameter = shipping_account_delivery_method_id.HasValue ?
                new ObjectParameter("shipping_account_delivery_method_id", shipping_account_delivery_method_id) :
                new ObjectParameter("shipping_account_delivery_method_id", typeof(int));
    
            var external_notesParameter = external_notes != null ?
                new ObjectParameter("external_notes", external_notes) :
                new ObjectParameter("external_notes", typeof(string));
    
            var internal_notesParameter = internal_notes != null ?
                new ObjectParameter("internal_notes", internal_notes) :
                new ObjectParameter("internal_notes", typeof(string));
    
            var notesParameter = notes != null ?
                new ObjectParameter("Notes", notes) :
                new ObjectParameter("Notes", typeof(string));
    
            var minutesParameter = minutes.HasValue ?
                new ObjectParameter("Minutes", minutes) :
                new ObjectParameter("Minutes", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spHold_Create2_Result>("spHold_Create2", login_IDParameter, listing_IDParameter, qtyParameter, sale_priceParameter, client_idParameter, client_broker_idParameter, shipping_account_delivery_method_idParameter, external_notesParameter, internal_notesParameter, notesParameter, minutesParameter);
        }
    
        public virtual ObjectResult<spGet_CCType_Result> spGet_CCType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_CCType_Result>("spGet_CCType");
        }
    
        public virtual ObjectResult<spGet_CCMonth_Result> spGet_CCMonth()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_CCMonth_Result>("spGet_CCMonth");
        }
    
        public virtual ObjectResult<spGet_CCYear_Result> spGet_CCYear()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_CCYear_Result>("spGet_CCYear");
        }
    
        public virtual ObjectResult<spGet_CountryCode_Result> spGet_CountryCode(Nullable<int> country_ID)
        {
            var country_IDParameter = country_ID.HasValue ?
                new ObjectParameter("Country_ID", country_ID) :
                new ObjectParameter("Country_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_CountryCode_Result>("spGet_CountryCode", country_IDParameter);
        }
    
        public virtual ObjectResult<spAdd_CC_Charge_Result> spAdd_CC_Charge(string lastFour, Nullable<decimal> amt, string expMonth, string expYear, string name, string address, string city, string state, string zip, Nullable<int> country_ID, string countryCode)
        {
            var lastFourParameter = lastFour != null ?
                new ObjectParameter("LastFour", lastFour) :
                new ObjectParameter("LastFour", typeof(string));
    
            var amtParameter = amt.HasValue ?
                new ObjectParameter("Amt", amt) :
                new ObjectParameter("Amt", typeof(decimal));
    
            var expMonthParameter = expMonth != null ?
                new ObjectParameter("ExpMonth", expMonth) :
                new ObjectParameter("ExpMonth", typeof(string));
    
            var expYearParameter = expYear != null ?
                new ObjectParameter("ExpYear", expYear) :
                new ObjectParameter("ExpYear", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var zipParameter = zip != null ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(string));
    
            var country_IDParameter = country_ID.HasValue ?
                new ObjectParameter("Country_ID", country_ID) :
                new ObjectParameter("Country_ID", typeof(int));
    
            var countryCodeParameter = countryCode != null ?
                new ObjectParameter("CountryCode", countryCode) :
                new ObjectParameter("CountryCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spAdd_CC_Charge_Result>("spAdd_CC_Charge", lastFourParameter, amtParameter, expMonthParameter, expYearParameter, nameParameter, addressParameter, cityParameter, stateParameter, zipParameter, country_IDParameter, countryCodeParameter);
        }
    
        public virtual ObjectResult<spConvert_Invoice_Result> spConvert_Invoice(Nullable<int> login_ID, Nullable<int> client_ID, Nullable<int> client_Broker_ID, string company, string first, string last, string address1, string address2, string city, Nullable<int> state_ID, string zip, Nullable<int> country_ID, string email, string phone, string invoiceNotes, Nullable<int> shipping_Type_ID, Nullable<decimal> invoice_Total, Nullable<decimal> invoice_Due, Nullable<decimal> shipping_Amt, Nullable<decimal> taxCollected)
        {
            var login_IDParameter = login_ID.HasValue ?
                new ObjectParameter("Login_ID", login_ID) :
                new ObjectParameter("Login_ID", typeof(int));
    
            var client_IDParameter = client_ID.HasValue ?
                new ObjectParameter("Client_ID", client_ID) :
                new ObjectParameter("Client_ID", typeof(int));
    
            var client_Broker_IDParameter = client_Broker_ID.HasValue ?
                new ObjectParameter("Client_Broker_ID", client_Broker_ID) :
                new ObjectParameter("Client_Broker_ID", typeof(int));
    
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            var firstParameter = first != null ?
                new ObjectParameter("First", first) :
                new ObjectParameter("First", typeof(string));
    
            var lastParameter = last != null ?
                new ObjectParameter("Last", last) :
                new ObjectParameter("Last", typeof(string));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("Address1", address1) :
                new ObjectParameter("Address1", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var state_IDParameter = state_ID.HasValue ?
                new ObjectParameter("State_ID", state_ID) :
                new ObjectParameter("State_ID", typeof(int));
    
            var zipParameter = zip != null ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(string));
    
            var country_IDParameter = country_ID.HasValue ?
                new ObjectParameter("Country_ID", country_ID) :
                new ObjectParameter("Country_ID", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var invoiceNotesParameter = invoiceNotes != null ?
                new ObjectParameter("InvoiceNotes", invoiceNotes) :
                new ObjectParameter("InvoiceNotes", typeof(string));
    
            var shipping_Type_IDParameter = shipping_Type_ID.HasValue ?
                new ObjectParameter("Shipping_Type_ID", shipping_Type_ID) :
                new ObjectParameter("Shipping_Type_ID", typeof(int));
    
            var invoice_TotalParameter = invoice_Total.HasValue ?
                new ObjectParameter("Invoice_Total", invoice_Total) :
                new ObjectParameter("Invoice_Total", typeof(decimal));
    
            var invoice_DueParameter = invoice_Due.HasValue ?
                new ObjectParameter("Invoice_Due", invoice_Due) :
                new ObjectParameter("Invoice_Due", typeof(decimal));
    
            var shipping_AmtParameter = shipping_Amt.HasValue ?
                new ObjectParameter("Shipping_Amt", shipping_Amt) :
                new ObjectParameter("Shipping_Amt", typeof(decimal));
    
            var taxCollectedParameter = taxCollected.HasValue ?
                new ObjectParameter("TaxCollected", taxCollected) :
                new ObjectParameter("TaxCollected", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConvert_Invoice_Result>("spConvert_Invoice", login_IDParameter, client_IDParameter, client_Broker_IDParameter, companyParameter, firstParameter, lastParameter, address1Parameter, address2Parameter, cityParameter, state_IDParameter, zipParameter, country_IDParameter, emailParameter, phoneParameter, invoiceNotesParameter, shipping_Type_IDParameter, invoice_TotalParameter, invoice_DueParameter, shipping_AmtParameter, taxCollectedParameter);
        }
    
        public virtual int spAdd_Invoice_Payment(Nullable<int> login_ID, Nullable<int> invoice_ID, Nullable<int> payType_ID, Nullable<decimal> amt, string note, string authCode)
        {
            var login_IDParameter = login_ID.HasValue ?
                new ObjectParameter("Login_ID", login_ID) :
                new ObjectParameter("Login_ID", typeof(int));
    
            var invoice_IDParameter = invoice_ID.HasValue ?
                new ObjectParameter("Invoice_ID", invoice_ID) :
                new ObjectParameter("Invoice_ID", typeof(int));
    
            var payType_IDParameter = payType_ID.HasValue ?
                new ObjectParameter("PayType_ID", payType_ID) :
                new ObjectParameter("PayType_ID", typeof(int));
    
            var amtParameter = amt.HasValue ?
                new ObjectParameter("Amt", amt) :
                new ObjectParameter("Amt", typeof(decimal));
    
            var noteParameter = note != null ?
                new ObjectParameter("Note", note) :
                new ObjectParameter("Note", typeof(string));
    
            var authCodeParameter = authCode != null ?
                new ObjectParameter("AuthCode", authCode) :
                new ObjectParameter("AuthCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAdd_Invoice_Payment", login_IDParameter, invoice_IDParameter, payType_IDParameter, amtParameter, noteParameter, authCodeParameter);
        }
    
        public virtual int spUpdate_CC_Charge(Nullable<int> charge_ID, string message, string txRefNum, string authCode, string aVSRespCode, string cVVRespCode)
        {
            var charge_IDParameter = charge_ID.HasValue ?
                new ObjectParameter("Charge_ID", charge_ID) :
                new ObjectParameter("Charge_ID", typeof(int));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            var txRefNumParameter = txRefNum != null ?
                new ObjectParameter("TxRefNum", txRefNum) :
                new ObjectParameter("TxRefNum", typeof(string));
    
            var authCodeParameter = authCode != null ?
                new ObjectParameter("AuthCode", authCode) :
                new ObjectParameter("AuthCode", typeof(string));
    
            var aVSRespCodeParameter = aVSRespCode != null ?
                new ObjectParameter("AVSRespCode", aVSRespCode) :
                new ObjectParameter("AVSRespCode", typeof(string));
    
            var cVVRespCodeParameter = cVVRespCode != null ?
                new ObjectParameter("CVVRespCode", cVVRespCode) :
                new ObjectParameter("CVVRespCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdate_CC_Charge", charge_IDParameter, messageParameter, txRefNumParameter, authCodeParameter, aVSRespCodeParameter, cVVRespCodeParameter);
        }
    
        public virtual ObjectResult<spGet_PerformerList_Result> spGet_PerformerList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_PerformerList_Result>("spGet_PerformerList");
        }
    
        public virtual ObjectResult<spGet_STHPerformerList_Result> spGet_STHPerformerList(Nullable<int> parent_ID, Nullable<int> child_ID, Nullable<int> grandchild_ID)
        {
            var parent_IDParameter = parent_ID.HasValue ?
                new ObjectParameter("Parent_ID", parent_ID) :
                new ObjectParameter("Parent_ID", typeof(int));
    
            var child_IDParameter = child_ID.HasValue ?
                new ObjectParameter("Child_ID", child_ID) :
                new ObjectParameter("Child_ID", typeof(int));
    
            var grandchild_IDParameter = grandchild_ID.HasValue ?
                new ObjectParameter("Grandchild_ID", grandchild_ID) :
                new ObjectParameter("Grandchild_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_STHPerformerList_Result>("spGet_STHPerformerList", parent_IDParameter, child_IDParameter, grandchild_IDParameter);
        }
    
        public virtual ObjectResult<spGet_STHList_Result> spGet_STHList(Nullable<int> parent_ID, Nullable<int> child_ID, Nullable<int> grandchild_ID, Nullable<int> performer_ID)
        {
            var parent_IDParameter = parent_ID.HasValue ?
                new ObjectParameter("Parent_ID", parent_ID) :
                new ObjectParameter("Parent_ID", typeof(int));
    
            var child_IDParameter = child_ID.HasValue ?
                new ObjectParameter("Child_ID", child_ID) :
                new ObjectParameter("Child_ID", typeof(int));
    
            var grandchild_IDParameter = grandchild_ID.HasValue ?
                new ObjectParameter("Grandchild_ID", grandchild_ID) :
                new ObjectParameter("Grandchild_ID", typeof(int));
    
            var performer_IDParameter = performer_ID.HasValue ?
                new ObjectParameter("Performer_ID", performer_ID) :
                new ObjectParameter("Performer_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_STHList_Result>("spGet_STHList", parent_IDParameter, child_IDParameter, grandchild_IDParameter, performer_IDParameter);
        }
    
        public virtual ObjectResult<spAdd_CC_Charge2_Result> spAdd_CC_Charge2(string cardType, string lastFour, Nullable<decimal> amt, string expMonth, string expYear, string name, string address, string city, string state, string zip, Nullable<int> country_ID, string countryCode)
        {
            var cardTypeParameter = cardType != null ?
                new ObjectParameter("CardType", cardType) :
                new ObjectParameter("CardType", typeof(string));
    
            var lastFourParameter = lastFour != null ?
                new ObjectParameter("LastFour", lastFour) :
                new ObjectParameter("LastFour", typeof(string));
    
            var amtParameter = amt.HasValue ?
                new ObjectParameter("Amt", amt) :
                new ObjectParameter("Amt", typeof(decimal));
    
            var expMonthParameter = expMonth != null ?
                new ObjectParameter("ExpMonth", expMonth) :
                new ObjectParameter("ExpMonth", typeof(string));
    
            var expYearParameter = expYear != null ?
                new ObjectParameter("ExpYear", expYear) :
                new ObjectParameter("ExpYear", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var zipParameter = zip != null ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(string));
    
            var country_IDParameter = country_ID.HasValue ?
                new ObjectParameter("Country_ID", country_ID) :
                new ObjectParameter("Country_ID", typeof(int));
    
            var countryCodeParameter = countryCode != null ?
                new ObjectParameter("CountryCode", countryCode) :
                new ObjectParameter("CountryCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spAdd_CC_Charge2_Result>("spAdd_CC_Charge2", cardTypeParameter, lastFourParameter, amtParameter, expMonthParameter, expYearParameter, nameParameter, addressParameter, cityParameter, stateParameter, zipParameter, country_IDParameter, countryCodeParameter);
        }
    
        public virtual ObjectResult<spUpdate_STHValue_Result> spUpdate_STHValue(Nullable<int> login_ID, string source, Nullable<int> clientBroker_ID, string newValue)
        {
            var login_IDParameter = login_ID.HasValue ?
                new ObjectParameter("Login_ID", login_ID) :
                new ObjectParameter("Login_ID", typeof(int));
    
            var sourceParameter = source != null ?
                new ObjectParameter("Source", source) :
                new ObjectParameter("Source", typeof(string));
    
            var clientBroker_IDParameter = clientBroker_ID.HasValue ?
                new ObjectParameter("ClientBroker_ID", clientBroker_ID) :
                new ObjectParameter("ClientBroker_ID", typeof(int));
    
            var newValueParameter = newValue != null ?
                new ObjectParameter("NewValue", newValue) :
                new ObjectParameter("NewValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spUpdate_STHValue_Result>("spUpdate_STHValue", login_IDParameter, sourceParameter, clientBroker_IDParameter, newValueParameter);
        }
    
        public virtual int spUpdate_STHPerformer_ID(Nullable<int> login_ID, Nullable<int> performer_ID, Nullable<int> clientBroker_ID)
        {
            var login_IDParameter = login_ID.HasValue ?
                new ObjectParameter("Login_ID", login_ID) :
                new ObjectParameter("Login_ID", typeof(int));
    
            var performer_IDParameter = performer_ID.HasValue ?
                new ObjectParameter("Performer_ID", performer_ID) :
                new ObjectParameter("Performer_ID", typeof(int));
    
            var clientBroker_IDParameter = clientBroker_ID.HasValue ?
                new ObjectParameter("ClientBroker_ID", clientBroker_ID) :
                new ObjectParameter("ClientBroker_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdate_STHPerformer_ID", login_IDParameter, performer_IDParameter, clientBroker_IDParameter);
        }
    
        public virtual ObjectResult<spGet_STHAccount_Result> spGet_STHAccount(Nullable<int> client_Broker_ID, Nullable<int> parent_ID, Nullable<int> child_ID, Nullable<int> grandchild_ID, Nullable<int> headliner_ID)
        {
            var client_Broker_IDParameter = client_Broker_ID.HasValue ?
                new ObjectParameter("Client_Broker_ID", client_Broker_ID) :
                new ObjectParameter("Client_Broker_ID", typeof(int));
    
            var parent_IDParameter = parent_ID.HasValue ?
                new ObjectParameter("Parent_ID", parent_ID) :
                new ObjectParameter("Parent_ID", typeof(int));
    
            var child_IDParameter = child_ID.HasValue ?
                new ObjectParameter("Child_ID", child_ID) :
                new ObjectParameter("Child_ID", typeof(int));
    
            var grandchild_IDParameter = grandchild_ID.HasValue ?
                new ObjectParameter("Grandchild_ID", grandchild_ID) :
                new ObjectParameter("Grandchild_ID", typeof(int));
    
            var headliner_IDParameter = headliner_ID.HasValue ?
                new ObjectParameter("Headliner_ID", headliner_ID) :
                new ObjectParameter("Headliner_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_STHAccount_Result>("spGet_STHAccount", client_Broker_IDParameter, parent_IDParameter, child_IDParameter, grandchild_IDParameter, headliner_IDParameter);
        }
    
        public virtual ObjectResult<spGet_POItemsSecRow_Result> spGet_POItemsSecRow(Nullable<int> po_id)
        {
            var po_idParameter = po_id.HasValue ?
                new ObjectParameter("po_id", po_id) :
                new ObjectParameter("po_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_POItemsSecRow_Result>("spGet_POItemsSecRow", po_idParameter);
        }
    
        public virtual ObjectResult<spSTH_AddNotice_Result> spSTH_AddNotice(Nullable<int> login_ID, Nullable<System.DateTime> eventDate, Nullable<int> type_ID, Nullable<int> headliner_ID, string users, string accounts, string message)
        {
            var login_IDParameter = login_ID.HasValue ?
                new ObjectParameter("Login_ID", login_ID) :
                new ObjectParameter("Login_ID", typeof(int));
    
            var eventDateParameter = eventDate.HasValue ?
                new ObjectParameter("EventDate", eventDate) :
                new ObjectParameter("EventDate", typeof(System.DateTime));
    
            var type_IDParameter = type_ID.HasValue ?
                new ObjectParameter("Type_ID", type_ID) :
                new ObjectParameter("Type_ID", typeof(int));
    
            var headliner_IDParameter = headliner_ID.HasValue ?
                new ObjectParameter("Headliner_ID", headliner_ID) :
                new ObjectParameter("Headliner_ID", typeof(int));
    
            var usersParameter = users != null ?
                new ObjectParameter("Users", users) :
                new ObjectParameter("Users", typeof(string));
    
            var accountsParameter = accounts != null ?
                new ObjectParameter("Accounts", accounts) :
                new ObjectParameter("Accounts", typeof(string));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSTH_AddNotice_Result>("spSTH_AddNotice", login_IDParameter, eventDateParameter, type_IDParameter, headliner_IDParameter, usersParameter, accountsParameter, messageParameter);
        }
    
        public virtual ObjectResult<spSTH_GetNotices_Result> spSTH_GetNotices(Nullable<int> login_ID, Nullable<System.DateTime> start, Nullable<System.DateTime> end)
        {
            var login_IDParameter = login_ID.HasValue ?
                new ObjectParameter("Login_ID", login_ID) :
                new ObjectParameter("Login_ID", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("Start", start) :
                new ObjectParameter("Start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSTH_GetNotices_Result>("spSTH_GetNotices", login_IDParameter, startParameter, endParameter);
        }
    
        public virtual ObjectResult<spSTH_GetRequest_Result> spSTH_GetRequest(Nullable<int> request_ID)
        {
            var request_IDParameter = request_ID.HasValue ?
                new ObjectParameter("Request_ID", request_ID) :
                new ObjectParameter("Request_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSTH_GetRequest_Result>("spSTH_GetRequest", request_IDParameter);
        }
    
        public virtual ObjectResult<spSTH_GetRequestUsers_Result> spSTH_GetRequestUsers(Nullable<int> request_ID)
        {
            var request_IDParameter = request_ID.HasValue ?
                new ObjectParameter("Request_ID", request_ID) :
                new ObjectParameter("Request_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSTH_GetRequestUsers_Result>("spSTH_GetRequestUsers", request_IDParameter);
        }
    
        public virtual ObjectResult<spSTH_NoticePeople_Result> spSTH_NoticePeople()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSTH_NoticePeople_Result>("spSTH_NoticePeople");
        }
    
        public virtual ObjectResult<spSTH_DeleteRequest_Result> spSTH_DeleteRequest(Nullable<int> request_ID)
        {
            var request_IDParameter = request_ID.HasValue ?
                new ObjectParameter("Request_ID", request_ID) :
                new ObjectParameter("Request_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSTH_DeleteRequest_Result>("spSTH_DeleteRequest", request_IDParameter);
        }
    
        public virtual ObjectResult<spSTH_AddToRequest_Result> spSTH_AddToRequest(Nullable<int> request_ID, string fullName)
        {
            var request_IDParameter = request_ID.HasValue ?
                new ObjectParameter("Request_ID", request_ID) :
                new ObjectParameter("Request_ID", typeof(int));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSTH_AddToRequest_Result>("spSTH_AddToRequest", request_IDParameter, fullNameParameter);
        }
    
        public virtual int spFill_CategoryTicketGroup(Nullable<int> login_ID, Nullable<int> categoryTicketGroup_ID, Nullable<int> ticketGroup_ID)
        {
            var login_IDParameter = login_ID.HasValue ?
                new ObjectParameter("Login_ID", login_ID) :
                new ObjectParameter("Login_ID", typeof(int));
    
            var categoryTicketGroup_IDParameter = categoryTicketGroup_ID.HasValue ?
                new ObjectParameter("CategoryTicketGroup_ID", categoryTicketGroup_ID) :
                new ObjectParameter("CategoryTicketGroup_ID", typeof(int));
    
            var ticketGroup_IDParameter = ticketGroup_ID.HasValue ?
                new ObjectParameter("TicketGroup_ID", ticketGroup_ID) :
                new ObjectParameter("TicketGroup_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spFill_CategoryTicketGroup", login_IDParameter, categoryTicketGroup_IDParameter, ticketGroup_IDParameter);
        }
    
        public virtual ObjectResult<spGet_ItemsForMasters_Result> spGet_ItemsForMasters(Nullable<int> event_ID)
        {
            var event_IDParameter = event_ID.HasValue ?
                new ObjectParameter("Event_ID", event_ID) :
                new ObjectParameter("Event_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_ItemsForMasters_Result>("spGet_ItemsForMasters", event_IDParameter);
        }
    
        public virtual ObjectResult<spBadge_Create_Result> spBadge_Create(string badge, Nullable<int> ticket_ID, Nullable<int> login_ID)
        {
            var badgeParameter = badge != null ?
                new ObjectParameter("Badge", badge) :
                new ObjectParameter("Badge", typeof(string));
    
            var ticket_IDParameter = ticket_ID.HasValue ?
                new ObjectParameter("Ticket_ID", ticket_ID) :
                new ObjectParameter("Ticket_ID", typeof(int));
    
            var login_IDParameter = login_ID.HasValue ?
                new ObjectParameter("Login_ID", login_ID) :
                new ObjectParameter("Login_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spBadge_Create_Result>("spBadge_Create", badgeParameter, ticket_IDParameter, login_IDParameter);
        }
    
        public virtual ObjectResult<spBadges_ByTicketGroup_Result> spBadges_ByTicketGroup(Nullable<int> ticket_Group_ID)
        {
            var ticket_Group_IDParameter = ticket_Group_ID.HasValue ?
                new ObjectParameter("Ticket_Group_ID", ticket_Group_ID) :
                new ObjectParameter("Ticket_Group_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spBadges_ByTicketGroup_Result>("spBadges_ByTicketGroup", ticket_Group_IDParameter);
        }
    
        public virtual ObjectResult<spBadge_History_Result> spBadge_History(string badge)
        {
            var badgeParameter = badge != null ?
                new ObjectParameter("Badge", badge) :
                new ObjectParameter("Badge", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spBadge_History_Result>("spBadge_History", badgeParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> spBadge_Split(Nullable<int> listing_ID, Nullable<int> login_ID)
        {
            var listing_IDParameter = listing_ID.HasValue ?
                new ObjectParameter("Listing_ID", listing_ID) :
                new ObjectParameter("Listing_ID", typeof(int));
    
            var login_IDParameter = login_ID.HasValue ?
                new ObjectParameter("Login_ID", login_ID) :
                new ObjectParameter("Login_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("spBadge_Split", listing_IDParameter, login_IDParameter);
        }
    
        public virtual ObjectResult<spBadge_NeededForEventIvoice_Result> spBadge_NeededForEventIvoice(Nullable<int> cTG_ID, Nullable<int> invoice_ID)
        {
            var cTG_IDParameter = cTG_ID.HasValue ?
                new ObjectParameter("CTG_ID", cTG_ID) :
                new ObjectParameter("CTG_ID", typeof(int));
    
            var invoice_IDParameter = invoice_ID.HasValue ?
                new ObjectParameter("Invoice_ID", invoice_ID) :
                new ObjectParameter("Invoice_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spBadge_NeededForEventIvoice_Result>("spBadge_NeededForEventIvoice", cTG_IDParameter, invoice_IDParameter);
        }
    
        public virtual ObjectResult<spBadge_List_Result> spBadge_List(Nullable<bool> th, Nullable<bool> fr, Nullable<bool> sa, Nullable<bool> su, Nullable<bool> fd)
        {
            var thParameter = th.HasValue ?
                new ObjectParameter("Th", th) :
                new ObjectParameter("Th", typeof(bool));
    
            var frParameter = fr.HasValue ?
                new ObjectParameter("Fr", fr) :
                new ObjectParameter("Fr", typeof(bool));
    
            var saParameter = sa.HasValue ?
                new ObjectParameter("Sa", sa) :
                new ObjectParameter("Sa", typeof(bool));
    
            var suParameter = su.HasValue ?
                new ObjectParameter("Su", su) :
                new ObjectParameter("Su", typeof(bool));
    
            var fdParameter = fd.HasValue ?
                new ObjectParameter("Fd", fd) :
                new ObjectParameter("Fd", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spBadge_List_Result>("spBadge_List", thParameter, frParameter, saParameter, suParameter, fdParameter);
        }
    
        public virtual ObjectResult<spBadge_AssignSeat_Result> spBadge_AssignSeat(Nullable<int> login_ID, Nullable<int> cT_ID, string badge)
        {
            var login_IDParameter = login_ID.HasValue ?
                new ObjectParameter("Login_ID", login_ID) :
                new ObjectParameter("Login_ID", typeof(int));
    
            var cT_IDParameter = cT_ID.HasValue ?
                new ObjectParameter("CT_ID", cT_ID) :
                new ObjectParameter("CT_ID", typeof(int));
    
            var badgeParameter = badge != null ?
                new ObjectParameter("Badge", badge) :
                new ObjectParameter("Badge", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spBadge_AssignSeat_Result>("spBadge_AssignSeat", login_IDParameter, cT_IDParameter, badgeParameter);
        }
    
        public virtual ObjectResult<spBadge_ScanIn_Result> spBadge_ScanIn(Nullable<int> login_ID, string badge)
        {
            var login_IDParameter = login_ID.HasValue ?
                new ObjectParameter("Login_ID", login_ID) :
                new ObjectParameter("Login_ID", typeof(int));
    
            var badgeParameter = badge != null ?
                new ObjectParameter("Badge", badge) :
                new ObjectParameter("Badge", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spBadge_ScanIn_Result>("spBadge_ScanIn", login_IDParameter, badgeParameter);
        }
    
        public virtual ObjectResult<spBadge_AddForSale_Result> spBadge_AddForSale(Nullable<int> event_ID, string badge)
        {
            var event_IDParameter = event_ID.HasValue ?
                new ObjectParameter("Event_ID", event_ID) :
                new ObjectParameter("Event_ID", typeof(int));
    
            var badgeParameter = badge != null ?
                new ObjectParameter("Badge", badge) :
                new ObjectParameter("Badge", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spBadge_AddForSale_Result>("spBadge_AddForSale", event_IDParameter, badgeParameter);
        }
    
        public virtual ObjectResult<spBadge_Export_Result> spBadge_Export(Nullable<int> event_ID)
        {
            var event_IDParameter = event_ID.HasValue ?
                new ObjectParameter("Event_ID", event_ID) :
                new ObjectParameter("Event_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spBadge_Export_Result>("spBadge_Export", event_IDParameter);
        }
    
        public virtual ObjectResult<spBadge_Convert_Invoice_Result> spBadge_Convert_Invoice(Nullable<int> login_ID, string itemPrice, Nullable<int> client_ID, Nullable<int> client_Broker_ID, string company, string first, string last, string address1, string address2, string city, Nullable<int> state_ID, string zip, Nullable<int> country_ID, string email, string phone, string invoiceNotes, Nullable<int> shipping_Type_ID, Nullable<decimal> invoice_Total, Nullable<decimal> invoice_Due, Nullable<decimal> shipping_Amt, Nullable<decimal> taxCollected)
        {
            var login_IDParameter = login_ID.HasValue ?
                new ObjectParameter("Login_ID", login_ID) :
                new ObjectParameter("Login_ID", typeof(int));
    
            var itemPriceParameter = itemPrice != null ?
                new ObjectParameter("ItemPrice", itemPrice) :
                new ObjectParameter("ItemPrice", typeof(string));
    
            var client_IDParameter = client_ID.HasValue ?
                new ObjectParameter("Client_ID", client_ID) :
                new ObjectParameter("Client_ID", typeof(int));
    
            var client_Broker_IDParameter = client_Broker_ID.HasValue ?
                new ObjectParameter("Client_Broker_ID", client_Broker_ID) :
                new ObjectParameter("Client_Broker_ID", typeof(int));
    
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            var firstParameter = first != null ?
                new ObjectParameter("First", first) :
                new ObjectParameter("First", typeof(string));
    
            var lastParameter = last != null ?
                new ObjectParameter("Last", last) :
                new ObjectParameter("Last", typeof(string));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("Address1", address1) :
                new ObjectParameter("Address1", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var state_IDParameter = state_ID.HasValue ?
                new ObjectParameter("State_ID", state_ID) :
                new ObjectParameter("State_ID", typeof(int));
    
            var zipParameter = zip != null ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(string));
    
            var country_IDParameter = country_ID.HasValue ?
                new ObjectParameter("Country_ID", country_ID) :
                new ObjectParameter("Country_ID", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var invoiceNotesParameter = invoiceNotes != null ?
                new ObjectParameter("InvoiceNotes", invoiceNotes) :
                new ObjectParameter("InvoiceNotes", typeof(string));
    
            var shipping_Type_IDParameter = shipping_Type_ID.HasValue ?
                new ObjectParameter("Shipping_Type_ID", shipping_Type_ID) :
                new ObjectParameter("Shipping_Type_ID", typeof(int));
    
            var invoice_TotalParameter = invoice_Total.HasValue ?
                new ObjectParameter("Invoice_Total", invoice_Total) :
                new ObjectParameter("Invoice_Total", typeof(decimal));
    
            var invoice_DueParameter = invoice_Due.HasValue ?
                new ObjectParameter("Invoice_Due", invoice_Due) :
                new ObjectParameter("Invoice_Due", typeof(decimal));
    
            var shipping_AmtParameter = shipping_Amt.HasValue ?
                new ObjectParameter("Shipping_Amt", shipping_Amt) :
                new ObjectParameter("Shipping_Amt", typeof(decimal));
    
            var taxCollectedParameter = taxCollected.HasValue ?
                new ObjectParameter("TaxCollected", taxCollected) :
                new ObjectParameter("TaxCollected", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spBadge_Convert_Invoice_Result>("spBadge_Convert_Invoice", login_IDParameter, itemPriceParameter, client_IDParameter, client_Broker_IDParameter, companyParameter, firstParameter, lastParameter, address1Parameter, address2Parameter, cityParameter, state_IDParameter, zipParameter, country_IDParameter, emailParameter, phoneParameter, invoiceNotesParameter, shipping_Type_IDParameter, invoice_TotalParameter, invoice_DueParameter, shipping_AmtParameter, taxCollectedParameter);
        }
    
        public virtual ObjectResult<spGet_MastersMain_Result> spGet_MastersMain()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_MastersMain_Result>("spGet_MastersMain");
        }
    
        public virtual ObjectResult<spMasters_UpdatePresaleNotes_Result> spMasters_UpdatePresaleNotes(Nullable<int> cTG_ID, string newNotes)
        {
            var cTG_IDParameter = cTG_ID.HasValue ?
                new ObjectParameter("CTG_ID", cTG_ID) :
                new ObjectParameter("CTG_ID", typeof(int));
    
            var newNotesParameter = newNotes != null ?
                new ObjectParameter("NewNotes", newNotes) :
                new ObjectParameter("NewNotes", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spMasters_UpdatePresaleNotes_Result>("spMasters_UpdatePresaleNotes", cTG_IDParameter, newNotesParameter);
        }
    
        public virtual ObjectResult<spGet_AgentInvoices_Result> spGet_AgentInvoices(Nullable<int> login_ID)
        {
            var login_IDParameter = login_ID.HasValue ?
                new ObjectParameter("Login_ID", login_ID) :
                new ObjectParameter("Login_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_AgentInvoices_Result>("spGet_AgentInvoices", login_IDParameter);
        }
    
        public virtual ObjectResult<spGet_ClientBrokerAddress_Result> spGet_ClientBrokerAddress(Nullable<int> clientBroker_ID)
        {
            var clientBroker_IDParameter = clientBroker_ID.HasValue ?
                new ObjectParameter("ClientBroker_ID", clientBroker_ID) :
                new ObjectParameter("ClientBroker_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_ClientBrokerAddress_Result>("spGet_ClientBrokerAddress", clientBroker_IDParameter);
        }
    
        public virtual ObjectResult<spGet_CCList_Result> spGet_CCList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_CCList_Result>("spGet_CCList");
        }
    
        public virtual ObjectResult<spUpdate_STHCard_ID_Result> spUpdate_STHCard_ID(Nullable<int> login_ID, Nullable<int> card_ID, Nullable<int> clientBroker_ID)
        {
            var login_IDParameter = login_ID.HasValue ?
                new ObjectParameter("Login_ID", login_ID) :
                new ObjectParameter("Login_ID", typeof(int));
    
            var card_IDParameter = card_ID.HasValue ?
                new ObjectParameter("Card_ID", card_ID) :
                new ObjectParameter("Card_ID", typeof(int));
    
            var clientBroker_IDParameter = clientBroker_ID.HasValue ?
                new ObjectParameter("ClientBroker_ID", clientBroker_ID) :
                new ObjectParameter("ClientBroker_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spUpdate_STHCard_ID_Result>("spUpdate_STHCard_ID", login_IDParameter, card_IDParameter, clientBroker_IDParameter);
        }
    
        public virtual int spUpdate_STHBroker(Nullable<int> login_ID, Nullable<int> clientBroker_ID, Nullable<byte> action)
        {
            var login_IDParameter = login_ID.HasValue ?
                new ObjectParameter("Login_ID", login_ID) :
                new ObjectParameter("Login_ID", typeof(int));
    
            var clientBroker_IDParameter = clientBroker_ID.HasValue ?
                new ObjectParameter("ClientBroker_ID", clientBroker_ID) :
                new ObjectParameter("ClientBroker_ID", typeof(int));
    
            var actionParameter = action.HasValue ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdate_STHBroker", login_IDParameter, clientBroker_IDParameter, actionParameter);
        }
    
        public virtual ObjectResult<spGet_STHSearch_Result> spGet_STHSearch(string input)
        {
            var inputParameter = input != null ?
                new ObjectParameter("Input", input) :
                new ObjectParameter("Input", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_STHSearch_Result>("spGet_STHSearch", inputParameter);
        }
    
        public virtual ObjectResult<spUpdate_STHValue1_Result> spUpdate_STHValue1(Nullable<int> login_ID, string source, Nullable<int> clientBroker_ID, string newValue)
        {
            var login_IDParameter = login_ID.HasValue ?
                new ObjectParameter("Login_ID", login_ID) :
                new ObjectParameter("Login_ID", typeof(int));
    
            var sourceParameter = source != null ?
                new ObjectParameter("Source", source) :
                new ObjectParameter("Source", typeof(string));
    
            var clientBroker_IDParameter = clientBroker_ID.HasValue ?
                new ObjectParameter("ClientBroker_ID", clientBroker_ID) :
                new ObjectParameter("ClientBroker_ID", typeof(int));
    
            var newValueParameter = newValue != null ?
                new ObjectParameter("NewValue", newValue) :
                new ObjectParameter("NewValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spUpdate_STHValue1_Result>("spUpdate_STHValue1", login_IDParameter, sourceParameter, clientBroker_IDParameter, newValueParameter);
        }
    
        public virtual ObjectResult<spSTH_CloneInfo_Result> spSTH_CloneInfo(Nullable<int> pO_ID)
        {
            var pO_IDParameter = pO_ID.HasValue ?
                new ObjectParameter("PO_ID", pO_ID) :
                new ObjectParameter("PO_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSTH_CloneInfo_Result>("spSTH_CloneInfo", pO_IDParameter);
        }
    
        public virtual ObjectResult<spGet_STHDD_Result> spGet_STHDD(Nullable<int> parent_ID, Nullable<int> child_ID, Nullable<int> grandchild_ID, Nullable<int> performer_ID)
        {
            var parent_IDParameter = parent_ID.HasValue ?
                new ObjectParameter("Parent_ID", parent_ID) :
                new ObjectParameter("Parent_ID", typeof(int));
    
            var child_IDParameter = child_ID.HasValue ?
                new ObjectParameter("Child_ID", child_ID) :
                new ObjectParameter("Child_ID", typeof(int));
    
            var grandchild_IDParameter = grandchild_ID.HasValue ?
                new ObjectParameter("Grandchild_ID", grandchild_ID) :
                new ObjectParameter("Grandchild_ID", typeof(int));
    
            var performer_IDParameter = performer_ID.HasValue ?
                new ObjectParameter("Performer_ID", performer_ID) :
                new ObjectParameter("Performer_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_STHDD_Result>("spGet_STHDD", parent_IDParameter, child_IDParameter, grandchild_IDParameter, performer_IDParameter);
        }
    
        public virtual ObjectResult<spGet_STHChildList_Result> spGet_STHChildList(Nullable<int> parent_ID, Nullable<int> grandchild_ID, Nullable<int> performer_ID)
        {
            var parent_IDParameter = parent_ID.HasValue ?
                new ObjectParameter("Parent_ID", parent_ID) :
                new ObjectParameter("Parent_ID", typeof(int));
    
            var grandchild_IDParameter = grandchild_ID.HasValue ?
                new ObjectParameter("Grandchild_ID", grandchild_ID) :
                new ObjectParameter("Grandchild_ID", typeof(int));
    
            var performer_IDParameter = performer_ID.HasValue ?
                new ObjectParameter("Performer_ID", performer_ID) :
                new ObjectParameter("Performer_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_STHChildList_Result>("spGet_STHChildList", parent_IDParameter, grandchild_IDParameter, performer_IDParameter);
        }
    
        public virtual ObjectResult<spGet_STHGrandchildList_Result> spGet_STHGrandchildList(Nullable<int> parent_ID, Nullable<int> child_ID, Nullable<int> performer_ID)
        {
            var parent_IDParameter = parent_ID.HasValue ?
                new ObjectParameter("Parent_ID", parent_ID) :
                new ObjectParameter("Parent_ID", typeof(int));
    
            var child_IDParameter = child_ID.HasValue ?
                new ObjectParameter("Child_ID", child_ID) :
                new ObjectParameter("Child_ID", typeof(int));
    
            var performer_IDParameter = performer_ID.HasValue ?
                new ObjectParameter("Performer_ID", performer_ID) :
                new ObjectParameter("Performer_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_STHGrandchildList_Result>("spGet_STHGrandchildList", parent_IDParameter, child_IDParameter, performer_IDParameter);
        }
    
        public virtual ObjectResult<spGet_STHParentList_Result> spGet_STHParentList(Nullable<int> child_ID, Nullable<int> grandchild_ID, Nullable<int> performer_ID)
        {
            var child_IDParameter = child_ID.HasValue ?
                new ObjectParameter("Child_ID", child_ID) :
                new ObjectParameter("Child_ID", typeof(int));
    
            var grandchild_IDParameter = grandchild_ID.HasValue ?
                new ObjectParameter("Grandchild_ID", grandchild_ID) :
                new ObjectParameter("Grandchild_ID", typeof(int));
    
            var performer_IDParameter = performer_ID.HasValue ?
                new ObjectParameter("Performer_ID", performer_ID) :
                new ObjectParameter("Performer_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_STHParentList_Result>("spGet_STHParentList", child_IDParameter, grandchild_IDParameter, performer_IDParameter);
        }
    
        public virtual ObjectResult<spSHT_CloneEventList_Result> spSHT_CloneEventList(Nullable<int> season, Nullable<int> performer_ID, Nullable<int> parent_ID, Nullable<int> child_ID, Nullable<int> grandchild_ID)
        {
            var seasonParameter = season.HasValue ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(int));
    
            var performer_IDParameter = performer_ID.HasValue ?
                new ObjectParameter("Performer_ID", performer_ID) :
                new ObjectParameter("Performer_ID", typeof(int));
    
            var parent_IDParameter = parent_ID.HasValue ?
                new ObjectParameter("Parent_ID", parent_ID) :
                new ObjectParameter("Parent_ID", typeof(int));
    
            var child_IDParameter = child_ID.HasValue ?
                new ObjectParameter("Child_ID", child_ID) :
                new ObjectParameter("Child_ID", typeof(int));
    
            var grandchild_IDParameter = grandchild_ID.HasValue ?
                new ObjectParameter("Grandchild_ID", grandchild_ID) :
                new ObjectParameter("Grandchild_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSHT_CloneEventList_Result>("spSHT_CloneEventList", seasonParameter, performer_IDParameter, parent_IDParameter, child_IDParameter, grandchild_IDParameter);
        }
    
        public virtual ObjectResult<spGet_STHEventList_Result> spGet_STHEventList(Nullable<int> season, Nullable<int> performer_ID, Nullable<int> parent_ID, Nullable<int> child_ID, Nullable<int> grandchild_ID)
        {
            var seasonParameter = season.HasValue ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(int));
    
            var performer_IDParameter = performer_ID.HasValue ?
                new ObjectParameter("Performer_ID", performer_ID) :
                new ObjectParameter("Performer_ID", typeof(int));
    
            var parent_IDParameter = parent_ID.HasValue ?
                new ObjectParameter("Parent_ID", parent_ID) :
                new ObjectParameter("Parent_ID", typeof(int));
    
            var child_IDParameter = child_ID.HasValue ?
                new ObjectParameter("Child_ID", child_ID) :
                new ObjectParameter("Child_ID", typeof(int));
    
            var grandchild_IDParameter = grandchild_ID.HasValue ?
                new ObjectParameter("Grandchild_ID", grandchild_ID) :
                new ObjectParameter("Grandchild_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_STHEventList_Result>("spGet_STHEventList", seasonParameter, performer_IDParameter, parent_IDParameter, child_IDParameter, grandchild_IDParameter);
        }
    
        public virtual ObjectResult<spCreate_NewEvent_Result> spCreate_NewEvent(Nullable<int> login_ID, Nullable<int> venue_ID, string name, string date, Nullable<int> headliner_ID, Nullable<int> parent_ID, Nullable<int> child_ID, Nullable<int> grandchild_ID)
        {
            var login_IDParameter = login_ID.HasValue ?
                new ObjectParameter("Login_ID", login_ID) :
                new ObjectParameter("Login_ID", typeof(int));
    
            var venue_IDParameter = venue_ID.HasValue ?
                new ObjectParameter("Venue_ID", venue_ID) :
                new ObjectParameter("Venue_ID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var dateParameter = date != null ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(string));
    
            var headliner_IDParameter = headliner_ID.HasValue ?
                new ObjectParameter("Headliner_ID", headliner_ID) :
                new ObjectParameter("Headliner_ID", typeof(int));
    
            var parent_IDParameter = parent_ID.HasValue ?
                new ObjectParameter("Parent_ID", parent_ID) :
                new ObjectParameter("Parent_ID", typeof(int));
    
            var child_IDParameter = child_ID.HasValue ?
                new ObjectParameter("Child_ID", child_ID) :
                new ObjectParameter("Child_ID", typeof(int));
    
            var grandchild_IDParameter = grandchild_ID.HasValue ?
                new ObjectParameter("Grandchild_ID", grandchild_ID) :
                new ObjectParameter("Grandchild_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCreate_NewEvent_Result>("spCreate_NewEvent", login_IDParameter, venue_IDParameter, nameParameter, dateParameter, headliner_IDParameter, parent_IDParameter, child_IDParameter, grandchild_IDParameter);
        }
    
        public virtual ObjectResult<spSTH_MakeClonePO_Result> spSTH_MakeClonePO(Nullable<int> login_ID, Nullable<int> sourcePO_ID, Nullable<int> event_ID, Nullable<int> agent_ID, Nullable<int> cC_ID, string items)
        {
            var login_IDParameter = login_ID.HasValue ?
                new ObjectParameter("Login_ID", login_ID) :
                new ObjectParameter("Login_ID", typeof(int));
    
            var sourcePO_IDParameter = sourcePO_ID.HasValue ?
                new ObjectParameter("SourcePO_ID", sourcePO_ID) :
                new ObjectParameter("SourcePO_ID", typeof(int));
    
            var event_IDParameter = event_ID.HasValue ?
                new ObjectParameter("Event_ID", event_ID) :
                new ObjectParameter("Event_ID", typeof(int));
    
            var agent_IDParameter = agent_ID.HasValue ?
                new ObjectParameter("Agent_ID", agent_ID) :
                new ObjectParameter("Agent_ID", typeof(int));
    
            var cC_IDParameter = cC_ID.HasValue ?
                new ObjectParameter("CC_ID", cC_ID) :
                new ObjectParameter("CC_ID", typeof(int));
    
            var itemsParameter = items != null ?
                new ObjectParameter("Items", items) :
                new ObjectParameter("Items", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSTH_MakeClonePO_Result>("spSTH_MakeClonePO", login_IDParameter, sourcePO_IDParameter, event_IDParameter, agent_IDParameter, cC_IDParameter, itemsParameter);
        }
    
        public virtual ObjectResult<spSTH_Clone_Result> spSTH_Clone(Nullable<int> pO_ID)
        {
            var pO_IDParameter = pO_ID.HasValue ?
                new ObjectParameter("PO_ID", pO_ID) :
                new ObjectParameter("PO_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSTH_Clone_Result>("spSTH_Clone", pO_IDParameter);
        }
    
        public virtual ObjectResult<spSTH_GetVendor_Result> spSTH_GetVendor(Nullable<int> vendor_ID)
        {
            var vendor_IDParameter = vendor_ID.HasValue ?
                new ObjectParameter("Vendor_ID", vendor_ID) :
                new ObjectParameter("Vendor_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSTH_GetVendor_Result>("spSTH_GetVendor", vendor_IDParameter);
        }
    
        public virtual ObjectResult<spGet_ExchangeSearch_Result> spGet_ExchangeSearch(string input, Nullable<System.DateTime> start, Nullable<System.DateTime> end, Nullable<int> parent_ID, Nullable<int> child_ID, Nullable<int> grandchild_ID)
        {
            var inputParameter = input != null ?
                new ObjectParameter("Input", input) :
                new ObjectParameter("Input", typeof(string));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("Start", start) :
                new ObjectParameter("Start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(System.DateTime));
    
            var parent_IDParameter = parent_ID.HasValue ?
                new ObjectParameter("Parent_ID", parent_ID) :
                new ObjectParameter("Parent_ID", typeof(int));
    
            var child_IDParameter = child_ID.HasValue ?
                new ObjectParameter("Child_ID", child_ID) :
                new ObjectParameter("Child_ID", typeof(int));
    
            var grandchild_IDParameter = grandchild_ID.HasValue ?
                new ObjectParameter("Grandchild_ID", grandchild_ID) :
                new ObjectParameter("Grandchild_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_ExchangeSearch_Result>("spGet_ExchangeSearch", inputParameter, startParameter, endParameter, parent_IDParameter, child_IDParameter, grandchild_IDParameter);
        }
    
        public virtual ObjectResult<spGet_ExchangeInfo_Result> spGet_ExchangeInfo(Nullable<int> exchange_ID)
        {
            var exchange_IDParameter = exchange_ID.HasValue ?
                new ObjectParameter("Exchange_ID", exchange_ID) :
                new ObjectParameter("Exchange_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_ExchangeInfo_Result>("spGet_ExchangeInfo", exchange_IDParameter);
        }
    
        public virtual ObjectResult<spGet_ShippingMethodSpecial_Result> spGet_ShippingMethodSpecial()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_ShippingMethodSpecial_Result>("spGet_ShippingMethodSpecial");
        }
    
        public virtual ObjectResult<spGet_StockType_Result> spGet_StockType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_StockType_Result>("spGet_StockType");
        }
    
        public virtual ObjectResult<spGet_VendorSearch_Result> spGet_VendorSearch(Nullable<bool> sTHOnly, string company, string first, string last, string address1, string address2, string city, string zip, string email, string phone)
        {
            var sTHOnlyParameter = sTHOnly.HasValue ?
                new ObjectParameter("STHOnly", sTHOnly) :
                new ObjectParameter("STHOnly", typeof(bool));
    
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            var firstParameter = first != null ?
                new ObjectParameter("First", first) :
                new ObjectParameter("First", typeof(string));
    
            var lastParameter = last != null ?
                new ObjectParameter("Last", last) :
                new ObjectParameter("Last", typeof(string));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("Address1", address1) :
                new ObjectParameter("Address1", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var zipParameter = zip != null ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_VendorSearch_Result>("spGet_VendorSearch", sTHOnlyParameter, companyParameter, firstParameter, lastParameter, address1Parameter, address2Parameter, cityParameter, zipParameter, emailParameter, phoneParameter);
        }
    }
}
